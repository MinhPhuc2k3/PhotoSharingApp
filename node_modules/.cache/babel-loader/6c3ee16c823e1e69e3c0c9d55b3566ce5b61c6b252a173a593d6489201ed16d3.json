{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebPhotoApp\\\\sandbox\\\\src\\\\components\\\\UserPhotos\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { Grid, Card, CardMedia, CardContent, Typography } from \"@mui/material\";\nimport \"./styles.css\";\nimport { useParams, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { React, useState, useEffect } from \"react\";\nimport AddCommentBox from \"./addCommentBox\";\nimport fetchModel from \"../../lib/fetchModelData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserPhotos() {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [userPhotos, setUserPhotos] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const userPhotos = fetchModel(`http://localhost:8081/api/photo/photosOfUser/${userId}`);\n        setUserPhotos(userPhotos.data);\n        setIsLoggedIn(true);\n      } catch (er) {\n        setIsLoggedIn(false);\n        console.log(er);\n      }\n    };\n    fetchData();\n  }, [userPhotos, userId]);\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    const options = {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n      hour: \"numeric\",\n      minute: \"2-digit\"\n    };\n    return new Intl.DateTimeFormat(\"en-US\", options).format(date);\n  };\n  if (isLoggedIn) return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: userPhotos.map(photo => {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"image\",\n            src: \"http://localhost:8081/images/\" + photo.file_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: [\"Date: \", formatDate(photo.date_time)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: [\"Comments: \", /*#__PURE__*/_jsxDEV(AddCommentBox, {\n                photoId: photo._id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 54\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this), photo.comments && photo.comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: formatDate(comment.date_time)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  to: `/users/${comment.user._id}`,\n                  children: `${comment.user.first_name} ${comment.user.last_name}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 27\n                }, this), \": \", comment.comment]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 25\n              }, this)]\n            }, comment._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 23\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this)\n      }, photo._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }, this);\n}\n_s(UserPhotos, \"tdIghRet0F/jMjHBQkA4KBnZN0k=\", false, function () {\n  return [useParams];\n});\n_c = UserPhotos;\nexport default UserPhotos;\nvar _c;\n$RefreshReg$(_c, \"UserPhotos\");","map":{"version":3,"names":["Grid","Card","CardMedia","CardContent","Typography","useParams","Link","axios","React","useState","useEffect","AddCommentBox","fetchModel","jsxDEV","_jsxDEV","UserPhotos","_s","userId","userPhotos","setUserPhotos","isLoggedIn","setIsLoggedIn","fetchData","data","er","console","log","formatDate","dateString","date","Date","options","year","month","day","hour","minute","Intl","DateTimeFormat","format","container","spacing","children","map","photo","item","xs","className","src","file_name","fileName","_jsxFileName","lineNumber","columnNumber","variant","date_time","photoId","_id","comments","comment","to","user","first_name","last_name","_c","$RefreshReg$"],"sources":["D:/WebPhotoApp/sandbox/src/components/UserPhotos/index.jsx"],"sourcesContent":["import { Grid, Card, CardMedia, CardContent, Typography } from \"@mui/material\";\nimport \"./styles.css\";\nimport { useParams, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { React, useState, useEffect } from \"react\";\nimport AddCommentBox from \"./addCommentBox\";\nimport fetchModel from \"../../lib/fetchModelData\";\n\n\n\n\n\n\n\nfunction UserPhotos() {\n  const { userId } = useParams();\n  const [userPhotos, setUserPhotos] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n\n    const fetchData = async () => {\n      try {\n        const userPhotos = fetchModel(`http://localhost:8081/api/photo/photosOfUser/${userId}`);\n        setUserPhotos(userPhotos.data);\n        setIsLoggedIn(true);\n      } catch (er) {\n        setIsLoggedIn(false);\n        console.log(er);\n      }\n    };\n    fetchData();\n  }, [userPhotos, userId]);\n\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    const options = {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n      hour: \"numeric\",\n      minute: \"2-digit\",\n    };\n    return new Intl.DateTimeFormat(\"en-US\", options).format(date);\n  };\n  if (isLoggedIn)\n    return (\n      <Grid container spacing={2}>\n        {userPhotos.map((photo) => {\n          return (\n            <Grid item xs={8} key={photo._id}>\n              <Card>\n                <img className=\"image\" src={\"http://localhost:8081/images/\"+photo.file_name} />\n                <CardContent>\n                  <Typography variant=\"body2\">\n                    Date: {formatDate(photo.date_time)}\n                  </Typography>\n                  <Typography variant=\"h6\">Comments: <AddCommentBox photoId={photo._id} /></Typography>\n                  {photo.comments &&\n                    photo.comments.map((comment) => (\n                      <div key={comment._id}>\n                        <Typography variant=\"body2\">\n                          {formatDate(comment.date_time)}\n                        </Typography>\n                        <Typography variant=\"body1\">\n                          <Link to={`/users/${comment.user._id}`}>\n                            {`${comment.user.first_name} ${comment.user.last_name}`}\n                          </Link>\n                          : {comment.comment}\n                        </Typography>\n\n                      </div>\n                    ))}\n                </CardContent>\n              </Card>\n            </Grid>\n          )\n        })}\n\n      </Grid>\n    );\n}\n\nexport default UserPhotos;\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,IAAI,EAAEC,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,eAAe;AAC9E,OAAO,cAAc;AACrB,SAASC,SAAS,EAAEC,IAAI,QAAQ,kBAAkB;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQlD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAO,CAAC,GAAGZ,SAAS,CAAC,CAAC;EAC9B,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IAEd,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMJ,UAAU,GAAGN,UAAU,CAAE,gDAA+CK,MAAO,EAAC,CAAC;QACvFE,aAAa,CAACD,UAAU,CAACK,IAAI,CAAC;QAC9BF,aAAa,CAAC,IAAI,CAAC;MACrB,CAAC,CAAC,OAAOG,EAAE,EAAE;QACXH,aAAa,CAAC,KAAK,CAAC;QACpBI,OAAO,CAACC,GAAG,CAACF,EAAE,CAAC;MACjB;IACF,CAAC;IACDF,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACJ,UAAU,EAAED,MAAM,CAAC,CAAC;EAExB,MAAMU,UAAU,GAAIC,UAAU,IAAK;IACjC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;IACjC,MAAMG,OAAO,GAAG;MACdC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,MAAM;MACbC,GAAG,EAAE,SAAS;MACdC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE;IACV,CAAC;IACD,OAAO,IAAIC,IAAI,CAACC,cAAc,CAAC,OAAO,EAAEP,OAAO,CAAC,CAACQ,MAAM,CAACV,IAAI,CAAC;EAC/D,CAAC;EACD,IAAIT,UAAU,EACZ,oBACEN,OAAA,CAACd,IAAI;IAACwC,SAAS;IAACC,OAAO,EAAE,CAAE;IAAAC,QAAA,EACxBxB,UAAU,CAACyB,GAAG,CAAEC,KAAK,IAAK;MACzB,oBACE9B,OAAA,CAACd,IAAI;QAAC6C,IAAI;QAACC,EAAE,EAAE,CAAE;QAAAJ,QAAA,eACf5B,OAAA,CAACb,IAAI;UAAAyC,QAAA,gBACH5B,OAAA;YAAKiC,SAAS,EAAC,OAAO;YAACC,GAAG,EAAE,+BAA+B,GAACJ,KAAK,CAACK;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC/EvC,OAAA,CAACX,WAAW;YAAAuC,QAAA,gBACV5B,OAAA,CAACV,UAAU;cAACkD,OAAO,EAAC,OAAO;cAAAZ,QAAA,GAAC,QACpB,EAACf,UAAU,CAACiB,KAAK,CAACW,SAAS,CAAC;YAAA;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxB,CAAC,eACbvC,OAAA,CAACV,UAAU;cAACkD,OAAO,EAAC,IAAI;cAAAZ,QAAA,GAAC,YAAU,eAAA5B,OAAA,CAACH,aAAa;gBAAC6C,OAAO,EAAEZ,KAAK,CAACa;cAAI;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,EACpFT,KAAK,CAACc,QAAQ,IACbd,KAAK,CAACc,QAAQ,CAACf,GAAG,CAAEgB,OAAO,iBACzB7C,OAAA;cAAA4B,QAAA,gBACE5B,OAAA,CAACV,UAAU;gBAACkD,OAAO,EAAC,OAAO;gBAAAZ,QAAA,EACxBf,UAAU,CAACgC,OAAO,CAACJ,SAAS;cAAC;gBAAAL,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpB,CAAC,eACbvC,OAAA,CAACV,UAAU;gBAACkD,OAAO,EAAC,OAAO;gBAAAZ,QAAA,gBACzB5B,OAAA,CAACR,IAAI;kBAACsD,EAAE,EAAG,UAASD,OAAO,CAACE,IAAI,CAACJ,GAAI,EAAE;kBAAAf,QAAA,EACnC,GAAEiB,OAAO,CAACE,IAAI,CAACC,UAAW,IAAGH,OAAO,CAACE,IAAI,CAACE,SAAU;gBAAC;kBAAAb,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACnD,CAAC,MACL,EAACM,OAAO,CAACA,OAAO;cAAA;gBAAAT,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACR,CAAC;YAAA,GATLM,OAAO,CAACF,GAAG;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAWhB,CACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC,GAxBcT,KAAK,CAACa,GAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAyB1B,CAAC;IAEX,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEE,CAAC;AAEb;AAACrC,EAAA,CAnEQD,UAAU;EAAA,QACEV,SAAS;AAAA;AAAA2D,EAAA,GADrBjD,UAAU;AAqEnB,eAAeA,UAAU;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}