{"ast":null,"code":"const asyncHooks = require('async_hooks');\nconst nano = require('nano-seconds');\nconst util = require('util');\nconst fs = require('fs');\nconst map = new Map();\nconst enabledDebug = process.env.DEBUG === 'als';\nfunction debug(...args) {\n  if (!enabledDebug) {\n    return;\n  }\n  // use a function like this one when debugging inside an AsyncHooks callback\n  fs.writeSync(1, `${util.format(...args)}\\n`);\n}\nlet defaultLinkedTop = false;\nlet enabledCreatedAt = true;\nfunction isUndefined(value) {\n  return value === undefined;\n}\n\n/**\n * Get data from itself or parent\n * @param {any} data The map data\n * @param {any} key The key\n * @returns {any}\n */\nfunction get(data, key) {\n  /* istanbul ignore if */\n  if (!data) {\n    return null;\n  }\n  let currentData = data;\n  let value = currentData[key];\n  while (isUndefined(value) && currentData.parent) {\n    currentData = currentData.parent;\n    value = currentData[key];\n  }\n  return value;\n}\n\n/**\n * Get the top data\n */\nfunction getTop(data) {\n  let result = data;\n  while (result && result.parent) {\n    result = result.parent;\n  }\n  return result;\n}\nlet currentId = 0;\nconst hooks = asyncHooks.createHook({\n  init: function init(id, type, triggerId) {\n    const data = {};\n    // init, set the created time\n    if (enabledCreatedAt) {\n      data.created = nano.now();\n    }\n    const parentId = triggerId || currentId;\n    // not trigger by itself, add parent\n    if (parentId !== id) {\n      const parent = map.get(parentId);\n      if (parent) {\n        data.parent = parent;\n      }\n    }\n    debug(`${id}(${type}) init by ${triggerId}`);\n    map.set(id, data);\n  },\n  /**\n   * Set the current id\n   */\n  before: function before(id) {\n    currentId = id;\n  },\n  /**\n   * Remove the data\n   */\n  destroy: function destroy(id) {\n    if (!map.has(id)) {\n      return;\n    }\n    debug(`destroy ${id}`);\n    map.delete(id);\n  }\n});\n\n/**\n * Get the current id\n */\nfunction getCurrentId() {\n  if (asyncHooks.executionAsyncId) {\n    return asyncHooks.executionAsyncId();\n  }\n  return asyncHooks.currentId() || currentId;\n}\n\n/**\n * Get the current id\n */\nexports.currentId = getCurrentId;\n\n/**\n * Enable the async hook\n */\nexports.enable = () => hooks.enable();\n\n/**\n * Disable the async hook\n */\nexports.disable = () => hooks.disable();\n\n/**\n * Get the size of map\n */\nexports.size = () => map.size;\n\n/**\n * Enable linked top\n */\nexports.enableLinkedTop = () => {\n  defaultLinkedTop = true;\n};\n\n/**\n * Disable linked top\n */\nexports.disableLinkedTop = () => {\n  defaultLinkedTop = false;\n};\n\n/**\n * Set the key/value for this score\n * @param {String} key The key of value\n * @param {String} value The value\n * @param {Boolean} linkedTop The value linked to top\n * @returns {Boolean} if success, will return true, otherwise false\n */\nexports.set = function setValue(key, value, linkedTop) {\n  /* istanbul ignore if */\n  if (key === 'created' || key === 'parent') {\n    throw new Error(\"can't set created and parent\");\n  }\n  const id = getCurrentId();\n  debug(`set ${key}:${value} to ${id}`);\n  let data = map.get(id);\n  /* istanbul ignore if */\n  if (!data) {\n    return false;\n  }\n  let setToLinkedTop = linkedTop;\n  if (isUndefined(linkedTop)) {\n    setToLinkedTop = defaultLinkedTop;\n  }\n  if (setToLinkedTop) {\n    data = getTop(data);\n  }\n  data[key] = value;\n  return true;\n};\n\n/**\n * Get the value by key\n * @param {String} key The key of value\n */\nexports.get = function getValue(key) {\n  const data = map.get(getCurrentId());\n  const value = get(data, key);\n  debug(`get ${key}:${value} from ${currentId}`);\n  return value;\n};\n\n/**\n * 获取当前current data\n */\nexports.getCurrentData = () => map.get(getCurrentId());\n\n/**\n * Get the value by key from parent\n * @param {String} key The key of value\n */\nexports.getFromParent = key => {\n  const currentData = map.get(getCurrentId());\n  if (!currentData) {\n    return null;\n  }\n  const value = get({\n    parent: currentData.parent\n  }, key);\n  return value;\n};\n\n/**\n * Remove the data of the current id\n */\nexports.remove = function removeValue() {\n  const id = getCurrentId();\n  if (id) {\n    map.delete(id);\n  }\n};\n\n/**\n * Get the use the of id\n * @param {Number} id The trigger id, is optional, default is `als.currentId()`\n * @returns {Number} The use time(ns) of the current id\n */\nexports.use = function getUse(id) {\n  const data = map.get(id || getCurrentId());\n  /* istanbul ignore if */\n  if (!data || !enabledCreatedAt) {\n    return -1;\n  }\n  return nano.difference(data.created);\n};\n\n/**\n * Get the top value\n */\nexports.top = function top() {\n  const data = map.get(getCurrentId());\n  return getTop(data);\n};\n\n/**\n * Set the scope (it will change the top)\n */\nexports.scope = function scope() {\n  const data = map.get(getCurrentId());\n  delete data.parent;\n};\n\n/**\n * Get all data of async locatl storage, please don't modify the data\n */\nexports.getAllData = function getAllData() {\n  return map;\n};\n\n/**\n * Enable the create time of data\n */\nexports.enableCreateTime = function enableCreateTime() {\n  enabledCreatedAt = true;\n};\n\n/**\n * Disable the create time of data\n */\nexports.disableCreateTime = function disableCreateTime() {\n  enabledCreatedAt = false;\n};","map":{"version":3,"names":["asyncHooks","require","nano","util","fs","map","Map","enabledDebug","process","env","DEBUG","debug","args","writeSync","format","defaultLinkedTop","enabledCreatedAt","isUndefined","value","undefined","get","data","key","currentData","parent","getTop","result","currentId","hooks","createHook","init","id","type","triggerId","created","now","parentId","set","before","destroy","has","delete","getCurrentId","executionAsyncId","exports","enable","disable","size","enableLinkedTop","disableLinkedTop","setValue","linkedTop","Error","setToLinkedTop","getValue","getCurrentData","getFromParent","remove","removeValue","use","getUse","difference","top","scope","getAllData","enableCreateTime","disableCreateTime"],"sources":["D:/WebPhotoApp/sandbox/node_modules/async-local-storage/als.js"],"sourcesContent":["const asyncHooks = require('async_hooks');\nconst nano = require('nano-seconds');\nconst util = require('util');\nconst fs = require('fs');\n\nconst map = new Map();\n\nconst enabledDebug = process.env.DEBUG === 'als';\n\nfunction debug(...args) {\n  if (!enabledDebug) {\n    return;\n  }\n  // use a function like this one when debugging inside an AsyncHooks callback\n  fs.writeSync(1, `${util.format(...args)}\\n`);\n}\n\nlet defaultLinkedTop = false;\nlet enabledCreatedAt = true;\n\nfunction isUndefined(value) {\n  return value === undefined;\n}\n\n/**\n * Get data from itself or parent\n * @param {any} data The map data\n * @param {any} key The key\n * @returns {any}\n */\nfunction get(data, key) {\n  /* istanbul ignore if */\n  if (!data) {\n    return null;\n  }\n  let currentData = data;\n  let value = currentData[key];\n  while (isUndefined(value) && currentData.parent) {\n    currentData = currentData.parent;\n    value = currentData[key];\n  }\n  return value;\n}\n\n/**\n * Get the top data\n */\nfunction getTop(data) {\n  let result = data;\n  while (result && result.parent) {\n    result = result.parent;\n  }\n  return result;\n}\n\nlet currentId = 0;\nconst hooks = asyncHooks.createHook({\n  init: function init(id, type, triggerId) {\n    const data = {};\n    // init, set the created time\n    if (enabledCreatedAt) {\n      data.created = nano.now();\n    }\n    const parentId = triggerId || currentId;\n    // not trigger by itself, add parent\n    if (parentId !== id) {\n      const parent = map.get(parentId);\n      if (parent) {\n        data.parent = parent;\n      }\n    }\n    debug(`${id}(${type}) init by ${triggerId}`);\n    map.set(id, data);\n  },\n  /**\n   * Set the current id\n   */\n  before: function before(id) {\n    currentId = id;\n  },\n  /**\n   * Remove the data\n   */\n  destroy: function destroy(id) {\n    if (!map.has(id)) {\n      return;\n    }\n    debug(`destroy ${id}`);\n    map.delete(id);\n  },\n});\n\n/**\n * Get the current id\n */\nfunction getCurrentId() {\n  if (asyncHooks.executionAsyncId) {\n    return asyncHooks.executionAsyncId();\n  }\n  return asyncHooks.currentId() || currentId;\n}\n\n/**\n * Get the current id\n */\nexports.currentId = getCurrentId;\n\n/**\n * Enable the async hook\n */\nexports.enable = () => hooks.enable();\n\n/**\n * Disable the async hook\n */\nexports.disable = () => hooks.disable();\n\n/**\n * Get the size of map\n */\nexports.size = () => map.size;\n\n/**\n * Enable linked top\n */\nexports.enableLinkedTop = () => {\n  defaultLinkedTop = true;\n};\n\n/**\n * Disable linked top\n */\nexports.disableLinkedTop = () => {\n  defaultLinkedTop = false;\n};\n\n/**\n * Set the key/value for this score\n * @param {String} key The key of value\n * @param {String} value The value\n * @param {Boolean} linkedTop The value linked to top\n * @returns {Boolean} if success, will return true, otherwise false\n */\nexports.set = function setValue(key, value, linkedTop) {\n  /* istanbul ignore if */\n  if (key === 'created' || key === 'parent') {\n    throw new Error(\"can't set created and parent\");\n  }\n  const id = getCurrentId();\n  debug(`set ${key}:${value} to ${id}`);\n  let data = map.get(id);\n  /* istanbul ignore if */\n  if (!data) {\n    return false;\n  }\n  let setToLinkedTop = linkedTop;\n  if (isUndefined(linkedTop)) {\n    setToLinkedTop = defaultLinkedTop;\n  }\n  if (setToLinkedTop) {\n    data = getTop(data);\n  }\n  data[key] = value;\n  return true;\n};\n\n/**\n * Get the value by key\n * @param {String} key The key of value\n */\nexports.get = function getValue(key) {\n  const data = map.get(getCurrentId());\n  const value = get(data, key);\n  debug(`get ${key}:${value} from ${currentId}`);\n  return value;\n};\n\n/**\n * 获取当前current data\n */\nexports.getCurrentData = () => map.get(getCurrentId());\n\n/**\n * Get the value by key from parent\n * @param {String} key The key of value\n */\nexports.getFromParent = key => {\n  const currentData = map.get(getCurrentId());\n  if (!currentData) {\n    return null;\n  }\n  const value = get({parent: currentData.parent}, key);\n  return value;\n};\n\n/**\n * Remove the data of the current id\n */\nexports.remove = function removeValue() {\n  const id = getCurrentId();\n  if (id) {\n    map.delete(id);\n  }\n};\n\n/**\n * Get the use the of id\n * @param {Number} id The trigger id, is optional, default is `als.currentId()`\n * @returns {Number} The use time(ns) of the current id\n */\nexports.use = function getUse(id) {\n  const data = map.get(id || getCurrentId());\n  /* istanbul ignore if */\n  if (!data || !enabledCreatedAt) {\n    return -1;\n  }\n  return nano.difference(data.created);\n};\n\n/**\n * Get the top value\n */\nexports.top = function top() {\n  const data = map.get(getCurrentId());\n  return getTop(data);\n};\n\n/**\n * Set the scope (it will change the top)\n */\nexports.scope = function scope() {\n  const data = map.get(getCurrentId());\n  delete data.parent;\n};\n\n/**\n * Get all data of async locatl storage, please don't modify the data\n */\nexports.getAllData = function getAllData() {\n  return map;\n};\n\n/**\n * Enable the create time of data\n */\nexports.enableCreateTime = function enableCreateTime() {\n  enabledCreatedAt = true;\n};\n\n/**\n * Disable the create time of data\n */\nexports.disableCreateTime = function disableCreateTime() {\n  enabledCreatedAt = false;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}