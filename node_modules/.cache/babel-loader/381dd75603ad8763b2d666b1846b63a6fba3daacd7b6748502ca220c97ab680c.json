{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"checked\", \"defaultChecked\", \"disabled\", \"onBlur\", \"onChange\", \"onFocus\", \"onFocusVisible\", \"readOnly\", \"required\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\nimport { useSwitch } from '../useSwitch';\nimport { useSlotProps } from '../utils';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { getSwitchUtilityClass } from './switchClasses';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    checked,\n    disabled,\n    focusVisible,\n    readOnly\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', focusVisible && 'focusVisible', readOnly && 'readOnly'],\n    thumb: ['thumb'],\n    input: ['input'],\n    track: ['track']\n  };\n  return composeClasses(slots, useClassNamesOverride(getSwitchUtilityClass));\n};\n\n/**\n * The foundation for building custom-styled switches.\n *\n * Demos:\n *\n * - [Switch](https://mui.com/base-ui/react-switch/)\n *\n * API:\n *\n * - [Switch API](https://mui.com/base-ui/react-switch/components-api/#switch)\n */\nconst Switch = /*#__PURE__*/React.forwardRef(function Switch(props, forwardedRef) {\n  const {\n      slotProps = {},\n      slots = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    getInputProps,\n    checked,\n    disabled,\n    focusVisible,\n    readOnly\n  } = useSwitch(props);\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    focusVisible,\n    readOnly\n  });\n  const classes = useUtilityClasses(ownerState);\n  const Root = slots.root ?? 'span';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref: forwardedRef\n    },\n    ownerState,\n    className: classes.root\n  });\n  const Thumb = slots.thumb ?? 'span';\n  const thumbProps = useSlotProps({\n    elementType: Thumb,\n    externalSlotProps: slotProps.thumb,\n    ownerState,\n    className: classes.thumb\n  });\n  const Input = slots.input ?? 'input';\n  const inputProps = useSlotProps({\n    elementType: Input,\n    getSlotProps: getInputProps,\n    externalSlotProps: slotProps.input,\n    ownerState,\n    className: classes.input\n  });\n  const Track = slots.track === null ? () => null : slots.track ?? 'span';\n  const trackProps = useSlotProps({\n    elementType: Track,\n    externalSlotProps: slotProps.track,\n    ownerState,\n    className: classes.track\n  });\n  return /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n    children: [/*#__PURE__*/_jsx(Track, _extends({}, trackProps)), /*#__PURE__*/_jsx(Thumb, _extends({}, thumbProps)), /*#__PURE__*/_jsx(Input, _extends({}, inputProps))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * Class name applied to the root element.\n   */\n  className: PropTypes.string,\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocusVisible: PropTypes.func,\n  /**\n   * If `true`, the component is read only.\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The props used for each slot inside the Switch.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    input: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    thumb: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    track: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Switch.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes /* @typescript-to-proptypes-ignore */.shape({\n    input: PropTypes.elementType,\n    root: PropTypes.elementType,\n    thumb: PropTypes.elementType,\n    track: PropTypes.oneOfType([PropTypes.elementType, PropTypes.oneOf([null])])\n  })\n} : void 0;\nexport { Switch };","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","unstable_composeClasses","composeClasses","useSwitch","useSlotProps","useClassNamesOverride","getSwitchUtilityClass","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","checked","disabled","focusVisible","readOnly","slots","root","thumb","input","track","Switch","forwardRef","props","forwardedRef","slotProps","other","getInputProps","classes","Root","rootProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","ref","className","Thumb","thumbProps","Input","inputProps","getSlotProps","Track","trackProps","children","process","env","NODE_ENV","propTypes","bool","string","defaultChecked","onBlur","func","onChange","onFocus","onFocusVisible","required","shape","oneOfType","object","oneOf"],"sources":["D:/WebPhotoApp/sandbox/node_modules/@mui/joy/node_modules/@mui/base/Switch/Switch.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"checked\", \"defaultChecked\", \"disabled\", \"onBlur\", \"onChange\", \"onFocus\", \"onFocusVisible\", \"readOnly\", \"required\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\nimport { useSwitch } from '../useSwitch';\nimport { useSlotProps } from '../utils';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { getSwitchUtilityClass } from './switchClasses';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    checked,\n    disabled,\n    focusVisible,\n    readOnly\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', focusVisible && 'focusVisible', readOnly && 'readOnly'],\n    thumb: ['thumb'],\n    input: ['input'],\n    track: ['track']\n  };\n  return composeClasses(slots, useClassNamesOverride(getSwitchUtilityClass));\n};\n\n/**\n * The foundation for building custom-styled switches.\n *\n * Demos:\n *\n * - [Switch](https://mui.com/base-ui/react-switch/)\n *\n * API:\n *\n * - [Switch API](https://mui.com/base-ui/react-switch/components-api/#switch)\n */\nconst Switch = /*#__PURE__*/React.forwardRef(function Switch(props, forwardedRef) {\n  const {\n      slotProps = {},\n      slots = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    getInputProps,\n    checked,\n    disabled,\n    focusVisible,\n    readOnly\n  } = useSwitch(props);\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    focusVisible,\n    readOnly\n  });\n  const classes = useUtilityClasses(ownerState);\n  const Root = slots.root ?? 'span';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref: forwardedRef\n    },\n    ownerState,\n    className: classes.root\n  });\n  const Thumb = slots.thumb ?? 'span';\n  const thumbProps = useSlotProps({\n    elementType: Thumb,\n    externalSlotProps: slotProps.thumb,\n    ownerState,\n    className: classes.thumb\n  });\n  const Input = slots.input ?? 'input';\n  const inputProps = useSlotProps({\n    elementType: Input,\n    getSlotProps: getInputProps,\n    externalSlotProps: slotProps.input,\n    ownerState,\n    className: classes.input\n  });\n  const Track = slots.track === null ? () => null : slots.track ?? 'span';\n  const trackProps = useSlotProps({\n    elementType: Track,\n    externalSlotProps: slotProps.track,\n    ownerState,\n    className: classes.track\n  });\n  return /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n    children: [/*#__PURE__*/_jsx(Track, _extends({}, trackProps)), /*#__PURE__*/_jsx(Thumb, _extends({}, thumbProps)), /*#__PURE__*/_jsx(Input, _extends({}, inputProps))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * Class name applied to the root element.\n   */\n  className: PropTypes.string,\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocusVisible: PropTypes.func,\n  /**\n   * If `true`, the component is read only.\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The props used for each slot inside the Switch.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    input: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    thumb: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    track: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Switch.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes /* @typescript-to-proptypes-ignore */.shape({\n    input: PropTypes.elementType,\n    root: PropTypes.elementType,\n    thumb: PropTypes.elementType,\n    track: PropTypes.oneOfType([PropTypes.elementType, PropTypes.oneOf([null])])\n  })\n} : void 0;\nexport { Switch };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}