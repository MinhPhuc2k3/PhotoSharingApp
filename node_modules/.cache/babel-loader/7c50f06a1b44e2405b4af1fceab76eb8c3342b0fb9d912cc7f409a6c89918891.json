{"ast":null,"code":"'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"uncheckedIcon\", \"checkedIcon\", \"label\", \"defaultChecked\", \"disabled\", \"disableIcon\", \"overlay\", \"id\", \"indeterminate\", \"indeterminateIcon\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"onFocusVisible\", \"readOnly\", \"required\", \"value\", \"color\", \"variant\", \"size\", \"component\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId, unstable_capitalize as capitalize } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { useSwitch } from '@mui/base/useSwitch';\nimport { styled, useThemeProps } from '../styles';\nimport useSlot from '../utils/useSlot';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport CheckIcon from '../internal/svg-icons/Check';\nimport IndeterminateIcon from '../internal/svg-icons/HorizontalRule';\nimport { TypographyNestedContext } from '../Typography/Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    checked,\n    disabled,\n    disableIcon,\n    focusVisible,\n    color,\n    variant,\n    size,\n    indeterminate\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', focusVisible && 'focusVisible', variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`],\n    checkbox: ['checkbox', checked && 'checked', indeterminate && 'indeterminate', disabled && 'disabled' // disabled class is necessary for displaying global variant\n    ],\n    action: ['action', checked && 'checked', disableIcon && disabled && 'disabled',\n    // add disabled class to action element for displaying global variant\n    focusVisible && 'focusVisible'],\n    input: ['input'],\n    label: ['label']\n  };\n  return composeClasses(slots, getCheckboxUtilityClass, {});\n};\nconst CheckboxRoot = styled('span', {\n  name: 'JoyCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  '--Icon-fontSize': 'var(--Checkbox-size)'\n}, ownerState.size === 'sm' && {\n  '--Checkbox-size': '1rem',\n  '& ~ *': {\n    '--FormHelperText-margin': '0 0 0 1.5rem'\n  },\n  fontSize: theme.vars.fontSize.sm,\n  gap: 'var(--Checkbox-gap, 0.5rem)'\n}, ownerState.size === 'md' && {\n  '--Checkbox-size': '1.25rem',\n  '& ~ *': {\n    '--FormHelperText-margin': '0.25rem 0 0 1.875rem'\n  },\n  fontSize: theme.vars.fontSize.md,\n  gap: 'var(--Checkbox-gap, 0.625rem)'\n}, ownerState.size === 'lg' && {\n  '--Checkbox-size': '1.5rem',\n  '& ~ *': {\n    '--FormHelperText-margin': '0.375rem 0 0 2.25rem'\n  },\n  fontSize: theme.vars.fontSize.lg,\n  gap: 'var(--Checkbox-gap, 0.75rem)'\n}, {\n  position: ownerState.overlay ? 'initial' : 'relative',\n  display: 'inline-flex',\n  fontFamily: theme.vars.fontFamily.body,\n  lineHeight: 'var(--Checkbox-size)',\n  color: theme.vars.palette.text.primary,\n  [`&.${checkboxClasses.disabled}`]: {\n    color: theme.variants.plainDisabled?.[ownerState.color]?.color\n  }\n}, ownerState.disableIcon && {\n  color: theme.variants[ownerState.variant]?.[ownerState.color]?.color,\n  [`&.${checkboxClasses.disabled}`]: {\n    color: theme.variants[`${ownerState.variant}Disabled`]?.[ownerState.color]?.color\n  }\n}));\nconst CheckboxCheckbox = styled('span', {\n  name: 'JoyCheckbox',\n  slot: 'Checkbox',\n  overridesResolver: (props, styles) => styles.checkbox\n})(({\n  theme,\n  ownerState\n}) => {\n  const variantStyle = theme.variants[`${ownerState.variant}`]?.[ownerState.color];\n  return [_extends({\n    '--Icon-color': ownerState.color !== 'neutral' || ownerState.variant === 'solid' ? 'currentColor' : theme.vars.palette.text.icon,\n    boxSizing: 'border-box',\n    borderRadius: `min(${theme.vars.radius.sm}, 0.25rem)`,\n    width: 'var(--Checkbox-size)',\n    height: 'var(--Checkbox-size)',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexShrink: 0\n  }, ownerState.disableIcon && {\n    display: 'contents'\n  }, {\n    [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n      '--Icon-color': 'currentColor'\n    }\n  }), ...(!ownerState.disableIcon ? [_extends({}, variantStyle, {\n    backgroundColor: variantStyle?.backgroundColor ?? theme.vars.palette.background.surface\n  }), {\n    '&:hover': {\n      '@media (hover: hover)': theme.variants[`${ownerState.variant}Hover`]?.[ownerState.color]\n    }\n  }, {\n    '&:active': theme.variants[`${ownerState.variant}Active`]?.[ownerState.color]\n  }, {\n    [`&.${checkboxClasses.disabled}`]: theme.variants[`${ownerState.variant}Disabled`]?.[ownerState.color]\n  }] : [])];\n});\nconst CheckboxAction = styled('span', {\n  name: 'JoyCheckbox',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})(({\n  theme,\n  ownerState\n}) => [{\n  borderRadius: `var(--Checkbox-actionRadius, ${ownerState.overlay ? 'var(--unstable_actionRadius, inherit)' : 'inherit'})`,\n  textAlign: 'left',\n  // prevent text-align inheritance\n  position: 'absolute',\n  top: 'calc(-1 * var(--variant-borderWidth, 0px))',\n  // clickable on the border and focus outline does not move when checked/unchecked\n  left: 'calc(-1 * var(--variant-borderWidth, 0px))',\n  bottom: 'calc(-1 * var(--variant-borderWidth, 0px))',\n  right: 'calc(-1 * var(--variant-borderWidth, 0px))',\n  zIndex: 1,\n  // The action element usually cover the area of nearest positioned parent\n  [theme.focus.selector]: theme.focus.default\n}, ...(ownerState.disableIcon ? [theme.variants[ownerState.variant]?.[ownerState.color], {\n  '&:hover': theme.variants[`${ownerState.variant}Hover`]?.[ownerState.color]\n}, {\n  '&:active': theme.variants[`${ownerState.variant}Active`]?.[ownerState.color]\n}, {\n  [`&.${checkboxClasses.disabled}`]: theme.variants[`${ownerState.variant}Disabled`]?.[ownerState.color]\n}] : [])]);\nconst CheckboxInput = styled('input', {\n  name: 'JoyCheckbox',\n  slot: 'Input',\n  overridesResolver: (props, styles) => styles.input\n})(() => ({\n  margin: 0,\n  opacity: 0,\n  position: 'absolute',\n  width: '100%',\n  height: '100%',\n  cursor: 'pointer'\n}));\nconst CheckboxLabel = styled('label', {\n  name: 'JoyCheckbox',\n  slot: 'Label',\n  overridesResolver: (props, styles) => styles.label\n})(({\n  ownerState\n}) => _extends({\n  flex: 1,\n  minWidth: 0\n}, ownerState.disableIcon && {\n  zIndex: 1,\n  // label should stay on top of the action.\n  pointerEvents: 'none' // makes hover ineffect.\n}));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateIcon, {});\n/**\n *\n * Demos:\n *\n * - [Checkbox](https://mui.com/joy-ui/react-checkbox/)\n *\n * API:\n *\n * - [Checkbox API](https://mui.com/joy-ui/api/checkbox/)\n */\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyCheckbox'\n  });\n  const {\n      checked: checkedProp,\n      uncheckedIcon,\n      checkedIcon = defaultCheckedIcon,\n      label,\n      defaultChecked,\n      disabled: disabledExternalProp,\n      disableIcon = false,\n      overlay,\n      id: idOverride,\n      indeterminate = false,\n      indeterminateIcon = defaultIndeterminateIcon,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      onFocusVisible,\n      readOnly,\n      required,\n      value,\n      color: colorProp,\n      variant: variantProp,\n      size: sizeProp = 'md',\n      component,\n      slots = {},\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const formControl = React.useContext(FormControlContext);\n  const disabledProp = inProps.disabled ?? formControl?.disabled ?? disabledExternalProp;\n  const size = inProps.size ?? formControl?.size ?? sizeProp;\n  if (process.env.NODE_ENV !== 'production') {\n    const registerEffect = formControl?.registerEffect;\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (registerEffect) {\n        return registerEffect();\n      }\n      return undefined;\n    }, [registerEffect]);\n  }\n  const id = useId(idOverride ?? formControl?.htmlFor);\n  const useCheckboxProps = {\n    checked: checkedProp,\n    defaultChecked,\n    disabled: disabledProp,\n    onBlur,\n    onChange,\n    onFocus,\n    onFocusVisible\n  };\n  const {\n    getInputProps,\n    checked,\n    disabled,\n    focusVisible\n  } = useSwitch(useCheckboxProps);\n  const isCheckboxActive = checked || indeterminate;\n  const activeVariant = variantProp || 'solid';\n  const inactiveVariant = variantProp || 'outlined';\n  const variant = isCheckboxActive ? activeVariant : inactiveVariant;\n  const color = inProps.color || (formControl?.error ? 'danger' : formControl?.color ?? colorProp);\n  const activeColor = color || 'primary';\n  const inactiveColor = color || 'neutral';\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableIcon,\n    overlay,\n    focusVisible,\n    color: isCheckboxActive ? activeColor : inactiveColor,\n    variant,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  const externalForwardedProps = _extends({}, other, {\n    component,\n    slots,\n    slotProps\n  });\n  const [SlotRoot, rootProps] = useSlot('root', {\n    ref,\n    className: classes.root,\n    elementType: CheckboxRoot,\n    externalForwardedProps,\n    ownerState\n  });\n  const [SlotCheckbox, checkboxProps] = useSlot('checkbox', {\n    className: classes.checkbox,\n    elementType: CheckboxCheckbox,\n    externalForwardedProps,\n    ownerState\n  });\n  const [SlotAction, actionProps] = useSlot('action', {\n    className: classes.action,\n    elementType: CheckboxAction,\n    externalForwardedProps,\n    ownerState\n  });\n  const [SlotInput, inputProps] = useSlot('input', {\n    additionalProps: _extends({\n      id,\n      name,\n      value,\n      readOnly,\n      role: undefined,\n      required: required ?? formControl?.required,\n      'aria-describedby': formControl?.['aria-describedby']\n    }, indeterminate && {\n      // https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-checked#values\n      'aria-checked': 'mixed'\n    }),\n    className: classes.input,\n    elementType: CheckboxInput,\n    externalForwardedProps,\n    getSlotProps: getInputProps,\n    ownerState\n  });\n  const [SlotLabel, labelProps] = useSlot('label', {\n    additionalProps: {\n      htmlFor: id\n    },\n    className: classes.label,\n    elementType: CheckboxLabel,\n    externalForwardedProps,\n    ownerState\n  });\n  let icon = uncheckedIcon;\n  if (disableIcon) {\n    icon = null;\n  } else if (indeterminate) {\n    icon = indeterminateIcon;\n  } else if (checked) {\n    icon = checkedIcon;\n  }\n  return /*#__PURE__*/_jsxs(SlotRoot, _extends({}, rootProps, {\n    children: [/*#__PURE__*/_jsxs(SlotCheckbox, _extends({}, checkboxProps, {\n      children: [/*#__PURE__*/_jsx(SlotAction, _extends({}, actionProps, {\n        children: /*#__PURE__*/_jsx(SlotInput, _extends({}, inputProps))\n      })), icon]\n    })), label && /*#__PURE__*/_jsx(TypographyNestedContext.Provider, {\n      value: true,\n      children: /*#__PURE__*/_jsx(SlotLabel, _extends({}, labelProps, {\n        children: label\n      }))\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Class name applied to the root element.\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'neutral'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['danger', 'neutral', 'primary', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the checked icon is removed and the selected variant is applied on the `action` element instead.\n   * @default false\n   */\n  disableIcon: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * The label element next to the checkbox.\n   */\n  label: PropTypes.node,\n  /**\n   * The `name` attribute of the input.\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocusVisible: PropTypes.func,\n  /**\n   * If `true`, the root element's position is set to initial which allows the action area to fill the nearest positioned parent.\n   * This prop is useful for composing Checkbox with ListItem component.\n   * @default false\n   */\n  overlay: PropTypes.bool,\n  /**\n   * If `true`, the component is read only.\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * @default 'md'\n   */\n  size: PropTypes.oneOf(['sm', 'md', 'lg']),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    action: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    checkbox: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    input: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    label: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    action: PropTypes.elementType,\n    checkbox: PropTypes.elementType,\n    input: PropTypes.elementType,\n    label: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The icon when `checked` is false.\n   */\n  uncheckedIcon: PropTypes.node,\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.number, PropTypes.string]),\n  /**\n   * The [global variant](https://mui.com/joy-ui/main-features/global-variants/) to use.\n   * @default 'solid'\n   */\n  variant: PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid'])\n} : void 0;\nexport default Checkbox;","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","unstable_useId","useId","unstable_capitalize","capitalize","unstable_composeClasses","composeClasses","useSwitch","styled","useThemeProps","useSlot","checkboxClasses","getCheckboxUtilityClass","CheckIcon","IndeterminateIcon","TypographyNestedContext","FormControlContext","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","checked","disabled","disableIcon","focusVisible","color","variant","size","indeterminate","slots","root","checkbox","action","input","label","CheckboxRoot","name","slot","overridesResolver","props","styles","theme","fontSize","vars","sm","gap","md","lg","position","overlay","display","fontFamily","body","lineHeight","palette","text","primary","variants","plainDisabled","CheckboxCheckbox","variantStyle","icon","boxSizing","borderRadius","radius","width","height","justifyContent","alignItems","flexShrink","backgroundColor","background","surface","CheckboxAction","textAlign","top","left","bottom","right","zIndex","focus","selector","default","CheckboxInput","margin","opacity","cursor","CheckboxLabel","flex","minWidth","pointerEvents","defaultCheckedIcon","defaultIndeterminateIcon","Checkbox","forwardRef","inProps","ref","checkedProp","uncheckedIcon","checkedIcon","defaultChecked","disabledExternalProp","id","idOverride","indeterminateIcon","onBlur","onChange","onFocus","onFocusVisible","readOnly","required","value","colorProp","variantProp","sizeProp","component","slotProps","other","formControl","useContext","disabledProp","process","env","NODE_ENV","registerEffect","useEffect","undefined","htmlFor","useCheckboxProps","getInputProps","isCheckboxActive","activeVariant","inactiveVariant","error","activeColor","inactiveColor","classes","externalForwardedProps","SlotRoot","rootProps","className","elementType","SlotCheckbox","checkboxProps","SlotAction","actionProps","SlotInput","inputProps","additionalProps","role","getSlotProps","SlotLabel","labelProps","children","Provider","propTypes","bool","node","string","oneOfType","oneOf","func","shape","object","sx","arrayOf","number"],"sources":["D:/WebPhotoApp/sandbox/node_modules/@mui/joy/Checkbox/Checkbox.js"],"sourcesContent":["'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"uncheckedIcon\", \"checkedIcon\", \"label\", \"defaultChecked\", \"disabled\", \"disableIcon\", \"overlay\", \"id\", \"indeterminate\", \"indeterminateIcon\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"onFocusVisible\", \"readOnly\", \"required\", \"value\", \"color\", \"variant\", \"size\", \"component\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId, unstable_capitalize as capitalize } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { useSwitch } from '@mui/base/useSwitch';\nimport { styled, useThemeProps } from '../styles';\nimport useSlot from '../utils/useSlot';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport CheckIcon from '../internal/svg-icons/Check';\nimport IndeterminateIcon from '../internal/svg-icons/HorizontalRule';\nimport { TypographyNestedContext } from '../Typography/Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    checked,\n    disabled,\n    disableIcon,\n    focusVisible,\n    color,\n    variant,\n    size,\n    indeterminate\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', focusVisible && 'focusVisible', variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`],\n    checkbox: ['checkbox', checked && 'checked', indeterminate && 'indeterminate', disabled && 'disabled' // disabled class is necessary for displaying global variant\n    ],\n    action: ['action', checked && 'checked', disableIcon && disabled && 'disabled',\n    // add disabled class to action element for displaying global variant\n    focusVisible && 'focusVisible'],\n    input: ['input'],\n    label: ['label']\n  };\n  return composeClasses(slots, getCheckboxUtilityClass, {});\n};\nconst CheckboxRoot = styled('span', {\n  name: 'JoyCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  '--Icon-fontSize': 'var(--Checkbox-size)'\n}, ownerState.size === 'sm' && {\n  '--Checkbox-size': '1rem',\n  '& ~ *': {\n    '--FormHelperText-margin': '0 0 0 1.5rem'\n  },\n  fontSize: theme.vars.fontSize.sm,\n  gap: 'var(--Checkbox-gap, 0.5rem)'\n}, ownerState.size === 'md' && {\n  '--Checkbox-size': '1.25rem',\n  '& ~ *': {\n    '--FormHelperText-margin': '0.25rem 0 0 1.875rem'\n  },\n  fontSize: theme.vars.fontSize.md,\n  gap: 'var(--Checkbox-gap, 0.625rem)'\n}, ownerState.size === 'lg' && {\n  '--Checkbox-size': '1.5rem',\n  '& ~ *': {\n    '--FormHelperText-margin': '0.375rem 0 0 2.25rem'\n  },\n  fontSize: theme.vars.fontSize.lg,\n  gap: 'var(--Checkbox-gap, 0.75rem)'\n}, {\n  position: ownerState.overlay ? 'initial' : 'relative',\n  display: 'inline-flex',\n  fontFamily: theme.vars.fontFamily.body,\n  lineHeight: 'var(--Checkbox-size)',\n  color: theme.vars.palette.text.primary,\n  [`&.${checkboxClasses.disabled}`]: {\n    color: theme.variants.plainDisabled?.[ownerState.color]?.color\n  }\n}, ownerState.disableIcon && {\n  color: theme.variants[ownerState.variant]?.[ownerState.color]?.color,\n  [`&.${checkboxClasses.disabled}`]: {\n    color: theme.variants[`${ownerState.variant}Disabled`]?.[ownerState.color]?.color\n  }\n}));\nconst CheckboxCheckbox = styled('span', {\n  name: 'JoyCheckbox',\n  slot: 'Checkbox',\n  overridesResolver: (props, styles) => styles.checkbox\n})(({\n  theme,\n  ownerState\n}) => {\n  const variantStyle = theme.variants[`${ownerState.variant}`]?.[ownerState.color];\n  return [_extends({\n    '--Icon-color': ownerState.color !== 'neutral' || ownerState.variant === 'solid' ? 'currentColor' : theme.vars.palette.text.icon,\n    boxSizing: 'border-box',\n    borderRadius: `min(${theme.vars.radius.sm}, 0.25rem)`,\n    width: 'var(--Checkbox-size)',\n    height: 'var(--Checkbox-size)',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexShrink: 0\n  }, ownerState.disableIcon && {\n    display: 'contents'\n  }, {\n    [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n      '--Icon-color': 'currentColor'\n    }\n  }), ...(!ownerState.disableIcon ? [_extends({}, variantStyle, {\n    backgroundColor: variantStyle?.backgroundColor ?? theme.vars.palette.background.surface\n  }), {\n    '&:hover': {\n      '@media (hover: hover)': theme.variants[`${ownerState.variant}Hover`]?.[ownerState.color]\n    }\n  }, {\n    '&:active': theme.variants[`${ownerState.variant}Active`]?.[ownerState.color]\n  }, {\n    [`&.${checkboxClasses.disabled}`]: theme.variants[`${ownerState.variant}Disabled`]?.[ownerState.color]\n  }] : [])];\n});\nconst CheckboxAction = styled('span', {\n  name: 'JoyCheckbox',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})(({\n  theme,\n  ownerState\n}) => [{\n  borderRadius: `var(--Checkbox-actionRadius, ${ownerState.overlay ? 'var(--unstable_actionRadius, inherit)' : 'inherit'})`,\n  textAlign: 'left',\n  // prevent text-align inheritance\n  position: 'absolute',\n  top: 'calc(-1 * var(--variant-borderWidth, 0px))',\n  // clickable on the border and focus outline does not move when checked/unchecked\n  left: 'calc(-1 * var(--variant-borderWidth, 0px))',\n  bottom: 'calc(-1 * var(--variant-borderWidth, 0px))',\n  right: 'calc(-1 * var(--variant-borderWidth, 0px))',\n  zIndex: 1,\n  // The action element usually cover the area of nearest positioned parent\n  [theme.focus.selector]: theme.focus.default\n}, ...(ownerState.disableIcon ? [theme.variants[ownerState.variant]?.[ownerState.color], {\n  '&:hover': theme.variants[`${ownerState.variant}Hover`]?.[ownerState.color]\n}, {\n  '&:active': theme.variants[`${ownerState.variant}Active`]?.[ownerState.color]\n}, {\n  [`&.${checkboxClasses.disabled}`]: theme.variants[`${ownerState.variant}Disabled`]?.[ownerState.color]\n}] : [])]);\nconst CheckboxInput = styled('input', {\n  name: 'JoyCheckbox',\n  slot: 'Input',\n  overridesResolver: (props, styles) => styles.input\n})(() => ({\n  margin: 0,\n  opacity: 0,\n  position: 'absolute',\n  width: '100%',\n  height: '100%',\n  cursor: 'pointer'\n}));\nconst CheckboxLabel = styled('label', {\n  name: 'JoyCheckbox',\n  slot: 'Label',\n  overridesResolver: (props, styles) => styles.label\n})(({\n  ownerState\n}) => _extends({\n  flex: 1,\n  minWidth: 0\n}, ownerState.disableIcon && {\n  zIndex: 1,\n  // label should stay on top of the action.\n  pointerEvents: 'none' // makes hover ineffect.\n}));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateIcon, {});\n/**\n *\n * Demos:\n *\n * - [Checkbox](https://mui.com/joy-ui/react-checkbox/)\n *\n * API:\n *\n * - [Checkbox API](https://mui.com/joy-ui/api/checkbox/)\n */\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyCheckbox'\n  });\n  const {\n      checked: checkedProp,\n      uncheckedIcon,\n      checkedIcon = defaultCheckedIcon,\n      label,\n      defaultChecked,\n      disabled: disabledExternalProp,\n      disableIcon = false,\n      overlay,\n      id: idOverride,\n      indeterminate = false,\n      indeterminateIcon = defaultIndeterminateIcon,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      onFocusVisible,\n      readOnly,\n      required,\n      value,\n      color: colorProp,\n      variant: variantProp,\n      size: sizeProp = 'md',\n      component,\n      slots = {},\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const formControl = React.useContext(FormControlContext);\n  const disabledProp = inProps.disabled ?? formControl?.disabled ?? disabledExternalProp;\n  const size = inProps.size ?? formControl?.size ?? sizeProp;\n  if (process.env.NODE_ENV !== 'production') {\n    const registerEffect = formControl?.registerEffect;\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (registerEffect) {\n        return registerEffect();\n      }\n      return undefined;\n    }, [registerEffect]);\n  }\n  const id = useId(idOverride ?? formControl?.htmlFor);\n  const useCheckboxProps = {\n    checked: checkedProp,\n    defaultChecked,\n    disabled: disabledProp,\n    onBlur,\n    onChange,\n    onFocus,\n    onFocusVisible\n  };\n  const {\n    getInputProps,\n    checked,\n    disabled,\n    focusVisible\n  } = useSwitch(useCheckboxProps);\n  const isCheckboxActive = checked || indeterminate;\n  const activeVariant = variantProp || 'solid';\n  const inactiveVariant = variantProp || 'outlined';\n  const variant = isCheckboxActive ? activeVariant : inactiveVariant;\n  const color = inProps.color || (formControl?.error ? 'danger' : formControl?.color ?? colorProp);\n  const activeColor = color || 'primary';\n  const inactiveColor = color || 'neutral';\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableIcon,\n    overlay,\n    focusVisible,\n    color: isCheckboxActive ? activeColor : inactiveColor,\n    variant,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  const externalForwardedProps = _extends({}, other, {\n    component,\n    slots,\n    slotProps\n  });\n  const [SlotRoot, rootProps] = useSlot('root', {\n    ref,\n    className: classes.root,\n    elementType: CheckboxRoot,\n    externalForwardedProps,\n    ownerState\n  });\n  const [SlotCheckbox, checkboxProps] = useSlot('checkbox', {\n    className: classes.checkbox,\n    elementType: CheckboxCheckbox,\n    externalForwardedProps,\n    ownerState\n  });\n  const [SlotAction, actionProps] = useSlot('action', {\n    className: classes.action,\n    elementType: CheckboxAction,\n    externalForwardedProps,\n    ownerState\n  });\n  const [SlotInput, inputProps] = useSlot('input', {\n    additionalProps: _extends({\n      id,\n      name,\n      value,\n      readOnly,\n      role: undefined,\n      required: required ?? formControl?.required,\n      'aria-describedby': formControl?.['aria-describedby']\n    }, indeterminate && {\n      // https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-checked#values\n      'aria-checked': 'mixed'\n    }),\n    className: classes.input,\n    elementType: CheckboxInput,\n    externalForwardedProps,\n    getSlotProps: getInputProps,\n    ownerState\n  });\n  const [SlotLabel, labelProps] = useSlot('label', {\n    additionalProps: {\n      htmlFor: id\n    },\n    className: classes.label,\n    elementType: CheckboxLabel,\n    externalForwardedProps,\n    ownerState\n  });\n  let icon = uncheckedIcon;\n  if (disableIcon) {\n    icon = null;\n  } else if (indeterminate) {\n    icon = indeterminateIcon;\n  } else if (checked) {\n    icon = checkedIcon;\n  }\n  return /*#__PURE__*/_jsxs(SlotRoot, _extends({}, rootProps, {\n    children: [/*#__PURE__*/_jsxs(SlotCheckbox, _extends({}, checkboxProps, {\n      children: [/*#__PURE__*/_jsx(SlotAction, _extends({}, actionProps, {\n        children: /*#__PURE__*/_jsx(SlotInput, _extends({}, inputProps))\n      })), icon]\n    })), label && /*#__PURE__*/_jsx(TypographyNestedContext.Provider, {\n      value: true,\n      children: /*#__PURE__*/_jsx(SlotLabel, _extends({}, labelProps, {\n        children: label\n      }))\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Class name applied to the root element.\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'neutral'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['danger', 'neutral', 'primary', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the checked icon is removed and the selected variant is applied on the `action` element instead.\n   * @default false\n   */\n  disableIcon: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * The label element next to the checkbox.\n   */\n  label: PropTypes.node,\n  /**\n   * The `name` attribute of the input.\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocusVisible: PropTypes.func,\n  /**\n   * If `true`, the root element's position is set to initial which allows the action area to fill the nearest positioned parent.\n   * This prop is useful for composing Checkbox with ListItem component.\n   * @default false\n   */\n  overlay: PropTypes.bool,\n  /**\n   * If `true`, the component is read only.\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * @default 'md'\n   */\n  size: PropTypes.oneOf(['sm', 'md', 'lg']),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    action: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    checkbox: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    input: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    label: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    action: PropTypes.elementType,\n    checkbox: PropTypes.elementType,\n    input: PropTypes.elementType,\n    label: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The icon when `checked` is false.\n   */\n  uncheckedIcon: PropTypes.node,\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.number, PropTypes.string]),\n  /**\n   * The [global variant](https://mui.com/joy-ui/main-features/global-variants/) to use.\n   * @default 'solid'\n   */\n  variant: PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid'])\n} : void 0;\nexport default Checkbox;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}