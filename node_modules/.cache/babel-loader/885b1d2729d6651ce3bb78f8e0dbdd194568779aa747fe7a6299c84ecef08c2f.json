{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebPhotoApp\\\\sandbox\\\\src\\\\components\\\\loginRegister\\\\LoginRegister.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./LoginRegister.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginRegister = () => {\n  _s();\n  const [loginName, setLoginName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isLoginNameEmpty, setIsLoginNameEmpty] = useState(false);\n  const [isPasswordEmpty, setIsPasswordEmpty] = useState(false);\n  const [isLoginNameOrPasswordWrong, setIsLoginNameOrPasswordWrong] = useState(false);\n  const handleLogin = event => {\n    if (loginName !== \"\") {\n      if (password !== \"\") {\n        axios.post(\"http://localhost:8081/api/admin/login\", {\n          username: loginName,\n          password: password\n        }).then(response => {\n          console.log(response.status);\n          let userDetailLink = \"/users/\" + response.data._id;\n          setIsLoginNameEmpty(false);\n          setIsPasswordEmpty(false);\n          setIsLoginNameOrPasswordWrong(false);\n          sessionStorage.setItem(\"isLoggedIn\", true);\n          window.location.reload();\n          window.location.assign(userDetailLink);\n        }).catch(err => {\n          console.log(err);\n          setIsLoginNameEmpty(false);\n          setIsPasswordEmpty(false);\n          setIsLoginNameOrPasswordWrong(true);\n        });\n      } else {\n        setIsLoginNameEmpty(false);\n        setIsPasswordEmpty(true);\n        setIsLoginNameOrPasswordWrong(false);\n      }\n    } else {\n      setIsLoginNameEmpty(true);\n      setIsPasswordEmpty(false);\n      setIsLoginNameOrPasswordWrong(false);\n    }\n    event.preventDefault();\n  };\n  const handleRegister = event => {\n    window.location.assign(\"/photo-share.html#/register\");\n    event.preventDefault();\n  };\n  const handleChangeUsername = event => {\n    setLoginName(event.target.value);\n  };\n  const handleChangePassword = event => {\n    setPassword(event.target.value);\n  };\n  const showEmptyMessageForLoginName = () => {\n    if (isLoginNameEmpty) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        children: [\"Username cannot be empty. Please try again.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  const showEmptyMessageForPassword = () => {\n    if (isPasswordEmpty) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        children: [\"Password cannot be empty. Please try again.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  const showErrorMessage = () => {\n    if (isLoginNameOrPasswordWrong) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        children: [\"Username or password is not correct. Please try again.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Please log in with your username and password.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), \"If you do not have an account, please register as a new user.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Username: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: loginName,\n      onChange: handleChangeUsername\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Password: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: password,\n      onChange: handleChangePassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), showEmptyMessageForLoginName(), showEmptyMessageForPassword(), showErrorMessage(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleRegister,\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginRegister, \"45XfdsuA+wLoExARMIsHHWqGHkk=\");\n_c = LoginRegister;\nexport default LoginRegister;\nvar _c;\n$RefreshReg$(_c, \"LoginRegister\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","LoginRegister","_s","loginName","setLoginName","password","setPassword","isLoginNameEmpty","setIsLoginNameEmpty","isPasswordEmpty","setIsPasswordEmpty","isLoginNameOrPasswordWrong","setIsLoginNameOrPasswordWrong","handleLogin","event","post","username","then","response","console","log","status","userDetailLink","data","_id","sessionStorage","setItem","window","location","reload","assign","catch","err","preventDefault","handleRegister","handleChangeUsername","target","value","handleChangePassword","showEmptyMessageForLoginName","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","showEmptyMessageForPassword","showErrorMessage","type","onChange","onClick","_c","$RefreshReg$"],"sources":["D:/WebPhotoApp/sandbox/src/components/loginRegister/LoginRegister.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./LoginRegister.css\";\r\nimport axios from \"axios\";\r\n\r\nconst LoginRegister = () => {\r\n  const [loginName, setLoginName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isLoginNameEmpty, setIsLoginNameEmpty] = useState(false);\r\n  const [isPasswordEmpty, setIsPasswordEmpty] = useState(false);\r\n  const [isLoginNameOrPasswordWrong, setIsLoginNameOrPasswordWrong] =\r\n    useState(false);\r\n\r\n  const handleLogin = (event) => {\r\n    if (loginName !== \"\") {\r\n      if (password !== \"\") {\r\n        axios\r\n          .post(\"http://localhost:8081/api/admin/login\", {\r\n            username: loginName,\r\n            password: password,\r\n          })\r\n          .then((response) => {\r\n            console.log(response.status);\r\n            let userDetailLink = \"/users/\" + response.data._id;\r\n            setIsLoginNameEmpty(false);\r\n            setIsPasswordEmpty(false);\r\n            setIsLoginNameOrPasswordWrong(false);\r\n            sessionStorage.setItem(\"isLoggedIn\", true);\r\n            window.location.reload();\r\n            window.location.assign(userDetailLink);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n            setIsLoginNameEmpty(false);\r\n            setIsPasswordEmpty(false);\r\n            setIsLoginNameOrPasswordWrong(true);\r\n          });\r\n      } else {\r\n        setIsLoginNameEmpty(false);\r\n        setIsPasswordEmpty(true);\r\n        setIsLoginNameOrPasswordWrong(false);\r\n      }\r\n    } else {\r\n      setIsLoginNameEmpty(true);\r\n      setIsPasswordEmpty(false);\r\n      setIsLoginNameOrPasswordWrong(false);\r\n    }\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleRegister = (event) => {\r\n    window.location.assign(\"/photo-share.html#/register\");\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleChangeUsername = (event) => {\r\n    setLoginName(event.target.value);\r\n  };\r\n\r\n  const handleChangePassword = (event) => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  const showEmptyMessageForLoginName = () => {\r\n    if (isLoginNameEmpty) {\r\n      return (\r\n        <span style={{ color: \"red\" }}>\r\n          Username cannot be empty. Please try again.\r\n          <br />\r\n        </span>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const showEmptyMessageForPassword = () => {\r\n    if (isPasswordEmpty) {\r\n      return (\r\n        <span style={{ color: \"red\" }}>\r\n          Password cannot be empty. Please try again.\r\n          <br />\r\n        </span>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const showErrorMessage = () => {\r\n    if (isLoginNameOrPasswordWrong) {\r\n      return (\r\n        <span style={{ color: \"red\" }}>\r\n          Username or password is not correct. Please try again.\r\n          <br />\r\n        </span>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>\r\n        Please log in with your username and password.\r\n        <br />\r\n      </h3>\r\n      If you do not have an account, please register as a new user.\r\n      <br />\r\n      <br />\r\n      <label>Username: </label>\r\n      <input type=\"text\" value={loginName} onChange={handleChangeUsername} />\r\n      <br />\r\n      <br />\r\n      <label>Password: </label>\r\n      <input type=\"password\" value={password} onChange={handleChangePassword} />\r\n      <br />\r\n      {showEmptyMessageForLoginName()}\r\n      {showEmptyMessageForPassword()}\r\n      {showErrorMessage()}\r\n      <br />\r\n      <button type=\"button\" onClick={handleLogin}>\r\n        Login\r\n      </button>\r\n      <span> </span>\r\n      <button type=\"button\" onClick={handleRegister}>\r\n        Register\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginRegister;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}