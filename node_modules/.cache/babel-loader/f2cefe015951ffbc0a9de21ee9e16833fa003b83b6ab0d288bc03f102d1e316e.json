{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebPhotoApp\\\\sandbox\\\\src\\\\components\\\\UserPhotos\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { Grid, Card, CardMedia, CardContent, Typography } from \"@mui/material\";\nimport \"./styles.css\";\nimport { useParams, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { React, useState, useEffect } from \"react\";\nimport AddCommentBox from \"./addCommentBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserPhotos() {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [userPhotos, setUserPhotos] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const userPhotos = await axios(`http://localhost:8081/api/photo/photosOfUser/${userId}`, {\n          withCredentials: true\n        });\n        setUserPhotos(userPhotos.data);\n        setIsLoggedIn(true);\n      } catch (er) {\n        setIsLoggedIn(false);\n        console.log(er);\n      }\n    };\n    fetchData();\n  }, [userPhotos, userId]);\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    const options = {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n      hour: \"numeric\",\n      minute: \"2-digit\"\n    };\n    return new Intl.DateTimeFormat(\"en-US\", options).format(date);\n  };\n  if (isLoggedIn) return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: userPhotos.map(photo => {\n      let image = null;\n      if (!image) {\n        try {\n          image = require(`../../images/${photo.file_name}`);\n        } catch (er) {}\n      }\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            component: \"img\",\n            image: image,\n            alt: photo.file_name,\n            sx: {\n              maxWidth: \"800px\",\n              maxHeight: \"800px\",\n              margin: \"auto\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: [\"Date: \", formatDate(photo.date_time)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: [\"Comments: \", /*#__PURE__*/_jsxDEV(AddCommentBox, {\n                photoId: photo._id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 50\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), photo.comments && photo.comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: formatDate(comment.date_time)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  to: `/users/${comment.user._id}`,\n                  children: `${comment.user.first_name} ${comment.user.last_name}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 23\n                }, this), \": \", comment.comment]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 21\n              }, this)]\n            }, comment._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, photo._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(UserPhotos, \"tdIghRet0F/jMjHBQkA4KBnZN0k=\", false, function () {\n  return [useParams];\n});\n_c = UserPhotos;\nexport default UserPhotos;\nvar _c;\n$RefreshReg$(_c, \"UserPhotos\");","map":{"version":3,"names":["Grid","Card","CardMedia","CardContent","Typography","useParams","Link","axios","React","useState","useEffect","AddCommentBox","jsxDEV","_jsxDEV","UserPhotos","_s","userId","userPhotos","setUserPhotos","isLoggedIn","setIsLoggedIn","fetchData","withCredentials","data","er","console","log","formatDate","dateString","date","Date","options","year","month","day","hour","minute","Intl","DateTimeFormat","format","container","spacing","children","map","photo","image","require","file_name","item","xs","component","alt","sx","maxWidth","maxHeight","margin","fileName","_jsxFileName","lineNumber","columnNumber","variant","date_time","photoId","_id","comments","comment","to","user","first_name","last_name","_c","$RefreshReg$"],"sources":["D:/WebPhotoApp/sandbox/src/components/UserPhotos/index.jsx"],"sourcesContent":["import { Grid, Card, CardMedia, CardContent, Typography } from \"@mui/material\";\nimport \"./styles.css\";\nimport { useParams, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { React, useState, useEffect } from \"react\";\nimport AddCommentBox from \"./addCommentBox\";\n\n\n\n\n\n\n\nfunction UserPhotos() {\n  const { userId } = useParams();\n  const [userPhotos, setUserPhotos] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n\n    const fetchData = async () => {\n      try{\n        const userPhotos = await axios(\n          `http://localhost:8081/api/photo/photosOfUser/${userId}`,{withCredentials: true}\n        );\n        setUserPhotos(userPhotos.data);\n        setIsLoggedIn(true);\n    }catch(er){\n      setIsLoggedIn(false);\n      console.log(er);\n    }\n    };\n    fetchData();\n  },[userPhotos, userId]);\n\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    const options = {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n      hour: \"numeric\",\n      minute: \"2-digit\",\n    };\n    return new Intl.DateTimeFormat(\"en-US\", options).format(date);\n  };\n  if(isLoggedIn)\n  return (\n    <Grid container spacing={2}>\n      {userPhotos.map((photo) =>{\n        let  image = null;\n        if(!image) {\n          try{\n            image = require(`../../images/${photo.file_name}`);\n          }catch(er){}\n        }\n        return (\n        <Grid item xs={8} key={photo._id}>\n          <Card>\n            <CardMedia\n              component=\"img\"\n              image={image}\n              alt={photo.file_name}\n              sx ={{maxWidth:\"800px\" , maxHeight:\"800px\", margin:\"auto\"}}\n            />\n            <CardContent>\n              <Typography variant=\"body2\">\n                Date: {formatDate(photo.date_time)}\n              </Typography>\n              <Typography variant=\"h6\">Comments: <AddCommentBox photoId={photo._id}/></Typography> \n              {photo.comments &&\n                photo.comments.map((comment) => (\n                  <div key={comment._id}>\n                    <Typography variant=\"body2\">\n                      {formatDate(comment.date_time)}\n                    </Typography>\n                    <Typography variant=\"body1\">\n                      <Link to={`/users/${comment.user._id}`}>\n                        {`${comment.user.first_name} ${comment.user.last_name}`}\n                      </Link>\n                      : {comment.comment}\n                    </Typography>\n\n                  </div>\n                ))}\n            </CardContent>\n          </Card>\n        </Grid>\n      )})}\n      \n    </Grid>\n  );\n}\n\nexport default UserPhotos;\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,IAAI,EAAEC,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,eAAe;AAC9E,OAAO,cAAc;AACrB,SAASC,SAAS,EAAEC,IAAI,QAAQ,kBAAkB;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ5C,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAO,CAAC,GAAGX,SAAS,CAAC,CAAC;EAC9B,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IAEd,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAG;QACD,MAAMJ,UAAU,GAAG,MAAMV,KAAK,CAC3B,gDAA+CS,MAAO,EAAC,EAAC;UAACM,eAAe,EAAE;QAAI,CACjF,CAAC;QACDJ,aAAa,CAACD,UAAU,CAACM,IAAI,CAAC;QAC9BH,aAAa,CAAC,IAAI,CAAC;MACvB,CAAC,QAAMI,EAAE,EAAC;QACRJ,aAAa,CAAC,KAAK,CAAC;QACpBK,OAAO,CAACC,GAAG,CAACF,EAAE,CAAC;MACjB;IACA,CAAC;IACDH,SAAS,CAAC,CAAC;EACb,CAAC,EAAC,CAACJ,UAAU,EAAED,MAAM,CAAC,CAAC;EAEvB,MAAMW,UAAU,GAAIC,UAAU,IAAK;IACjC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;IACjC,MAAMG,OAAO,GAAG;MACdC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,MAAM;MACbC,GAAG,EAAE,SAAS;MACdC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE;IACV,CAAC;IACD,OAAO,IAAIC,IAAI,CAACC,cAAc,CAAC,OAAO,EAAEP,OAAO,CAAC,CAACQ,MAAM,CAACV,IAAI,CAAC;EAC/D,CAAC;EACD,IAAGV,UAAU,EACb,oBACEN,OAAA,CAACb,IAAI;IAACwC,SAAS;IAACC,OAAO,EAAE,CAAE;IAAAC,QAAA,EACxBzB,UAAU,CAAC0B,GAAG,CAAEC,KAAK,IAAI;MACxB,IAAKC,KAAK,GAAG,IAAI;MACjB,IAAG,CAACA,KAAK,EAAE;QACT,IAAG;UACDA,KAAK,GAAGC,OAAO,CAAE,gBAAeF,KAAK,CAACG,SAAU,EAAC,CAAC;QACpD,CAAC,QAAMvB,EAAE,EAAC,CAAC;MACb;MACA,oBACAX,OAAA,CAACb,IAAI;QAACgD,IAAI;QAACC,EAAE,EAAE,CAAE;QAAAP,QAAA,eACf7B,OAAA,CAACZ,IAAI;UAAAyC,QAAA,gBACH7B,OAAA,CAACX,SAAS;YACRgD,SAAS,EAAC,KAAK;YACfL,KAAK,EAAEA,KAAM;YACbM,GAAG,EAAEP,KAAK,CAACG,SAAU;YACrBK,EAAE,EAAG;cAACC,QAAQ,EAAC,OAAO;cAAGC,SAAS,EAAC,OAAO;cAAEC,MAAM,EAAC;YAAM;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5D,CAAC,eACF9C,OAAA,CAACV,WAAW;YAAAuC,QAAA,gBACV7B,OAAA,CAACT,UAAU;cAACwD,OAAO,EAAC,OAAO;cAAAlB,QAAA,GAAC,QACpB,EAACf,UAAU,CAACiB,KAAK,CAACiB,SAAS,CAAC;YAAA;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxB,CAAC,eACb9C,OAAA,CAACT,UAAU;cAACwD,OAAO,EAAC,IAAI;cAAAlB,QAAA,GAAC,YAAU,eAAA7B,OAAA,CAACF,aAAa;gBAACmD,OAAO,EAAElB,KAAK,CAACmB;cAAI;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,EACnFf,KAAK,CAACoB,QAAQ,IACbpB,KAAK,CAACoB,QAAQ,CAACrB,GAAG,CAAEsB,OAAO,iBACzBpD,OAAA;cAAA6B,QAAA,gBACE7B,OAAA,CAACT,UAAU;gBAACwD,OAAO,EAAC,OAAO;gBAAAlB,QAAA,EACxBf,UAAU,CAACsC,OAAO,CAACJ,SAAS;cAAC;gBAAAL,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpB,CAAC,eACb9C,OAAA,CAACT,UAAU;gBAACwD,OAAO,EAAC,OAAO;gBAAAlB,QAAA,gBACzB7B,OAAA,CAACP,IAAI;kBAAC4D,EAAE,EAAG,UAASD,OAAO,CAACE,IAAI,CAACJ,GAAI,EAAE;kBAAArB,QAAA,EACnC,GAAEuB,OAAO,CAACE,IAAI,CAACC,UAAW,IAAGH,OAAO,CAACE,IAAI,CAACE,SAAU;gBAAC;kBAAAb,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACnD,CAAC,MACL,EAACM,OAAO,CAACA,OAAO;cAAA;gBAAAT,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACR,CAAC;YAAA,GATLM,OAAO,CAACF,GAAG;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAWhB,CACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC,GA7Bcf,KAAK,CAACmB,GAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA8B1B,CAAC;IACR,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAEX;AAAC5C,EAAA,CA/EQD,UAAU;EAAA,QACET,SAAS;AAAA;AAAAiE,EAAA,GADrBxD,UAAU;AAiFnB,eAAeA,UAAU;AAAC,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}