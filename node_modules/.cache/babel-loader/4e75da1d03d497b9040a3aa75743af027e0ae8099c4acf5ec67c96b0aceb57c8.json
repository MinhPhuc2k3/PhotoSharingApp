{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"getSelector\"],\n  _excluded2 = [\"colorSchemes\", \"components\", \"defaultColorScheme\"];\nimport deepmerge from '@mui/utils/deepmerge';\nimport cssVarsParser from './cssVarsParser';\nfunction prepareCssVars(theme, _ref = {}) {\n  let {\n      getSelector\n    } = _ref,\n    parserConfig = _objectWithoutPropertiesLoose(_ref, _excluded);\n  // @ts-ignore - ignore components do not exist\n  const {\n      colorSchemes = {},\n      defaultColorScheme = 'light'\n    } = theme,\n    otherTheme = _objectWithoutPropertiesLoose(theme, _excluded2);\n  const {\n    vars: rootVars,\n    css: rootCss,\n    varsWithDefaults: rootVarsWithDefaults\n  } = cssVarsParser(otherTheme, parserConfig);\n  let themeVars = rootVarsWithDefaults;\n  const colorSchemesMap = {};\n  const {\n      [defaultColorScheme]: defaultScheme\n    } = colorSchemes,\n    otherColorSchemes = _objectWithoutPropertiesLoose(colorSchemes, [defaultColorScheme].map(_toPropertyKey));\n  Object.entries(otherColorSchemes || {}).forEach(([key, scheme]) => {\n    const {\n      vars,\n      css,\n      varsWithDefaults\n    } = cssVarsParser(scheme, parserConfig);\n    themeVars = deepmerge(themeVars, varsWithDefaults);\n    colorSchemesMap[key] = {\n      css,\n      vars\n    };\n  });\n  if (defaultScheme) {\n    // default color scheme vars should be merged last to set as default\n    const {\n      css,\n      vars,\n      varsWithDefaults\n    } = cssVarsParser(defaultScheme, parserConfig);\n    themeVars = deepmerge(themeVars, varsWithDefaults);\n    colorSchemesMap[defaultColorScheme] = {\n      css,\n      vars\n    };\n  }\n  const generateThemeVars = () => {\n    let vars = _extends({}, rootVars);\n    Object.entries(colorSchemesMap).forEach(([, {\n      vars: schemeVars\n    }]) => {\n      vars = deepmerge(vars, schemeVars);\n    });\n    return vars;\n  };\n  const generateStyleSheets = () => {\n    const stylesheets = [];\n    const colorScheme = theme.defaultColorScheme || 'light';\n    function insertStyleSheet(selector, css) {\n      if (Object.keys(css).length) {\n        stylesheets.push(typeof selector === 'string' ? {\n          [selector]: _extends({}, css)\n        } : selector);\n      }\n    }\n    insertStyleSheet(getSelector?.(undefined, _extends({}, rootCss)) || ':root', rootCss);\n    const {\n        [colorScheme]: defaultSchemeVal\n      } = colorSchemesMap,\n      rest = _objectWithoutPropertiesLoose(colorSchemesMap, [colorScheme].map(_toPropertyKey));\n    if (defaultSchemeVal) {\n      // default color scheme has to come before other color schemes\n      const {\n        css\n      } = defaultSchemeVal;\n      insertStyleSheet(getSelector?.(colorScheme, _extends({}, css)) || `[${theme.attribute || 'data-color-scheme'}=\"${colorScheme}\"]`, css);\n    }\n    Object.entries(rest).forEach(([key, {\n      css\n    }]) => {\n      insertStyleSheet(getSelector?.(key, _extends({}, css)) || `[${theme.attribute || 'data-color-scheme'}=\"${key}\"]`, css);\n    });\n    return stylesheets;\n  };\n  return {\n    vars: themeVars,\n    generateThemeVars,\n    generateStyleSheets\n  };\n}\nexport default prepareCssVars;","map":{"version":3,"names":["_extends","_toPropertyKey","_objectWithoutPropertiesLoose","_excluded","_excluded2","deepmerge","cssVarsParser","prepareCssVars","theme","_ref","getSelector","parserConfig","colorSchemes","defaultColorScheme","otherTheme","vars","rootVars","css","rootCss","varsWithDefaults","rootVarsWithDefaults","themeVars","colorSchemesMap","defaultScheme","otherColorSchemes","map","Object","entries","forEach","key","scheme","generateThemeVars","schemeVars","generateStyleSheets","stylesheets","colorScheme","insertStyleSheet","selector","keys","length","push","undefined","defaultSchemeVal","rest","attribute"],"sources":["D:/WebPhotoApp/sandbox/node_modules/@mui/joy/node_modules/@mui/system/cssVars/prepareCssVars.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"getSelector\"],\n  _excluded2 = [\"colorSchemes\", \"components\", \"defaultColorScheme\"];\nimport deepmerge from '@mui/utils/deepmerge';\nimport cssVarsParser from './cssVarsParser';\nfunction prepareCssVars(theme, _ref = {}) {\n  let {\n      getSelector\n    } = _ref,\n    parserConfig = _objectWithoutPropertiesLoose(_ref, _excluded);\n  // @ts-ignore - ignore components do not exist\n  const {\n      colorSchemes = {},\n      defaultColorScheme = 'light'\n    } = theme,\n    otherTheme = _objectWithoutPropertiesLoose(theme, _excluded2);\n  const {\n    vars: rootVars,\n    css: rootCss,\n    varsWithDefaults: rootVarsWithDefaults\n  } = cssVarsParser(otherTheme, parserConfig);\n  let themeVars = rootVarsWithDefaults;\n  const colorSchemesMap = {};\n  const {\n      [defaultColorScheme]: defaultScheme\n    } = colorSchemes,\n    otherColorSchemes = _objectWithoutPropertiesLoose(colorSchemes, [defaultColorScheme].map(_toPropertyKey));\n  Object.entries(otherColorSchemes || {}).forEach(([key, scheme]) => {\n    const {\n      vars,\n      css,\n      varsWithDefaults\n    } = cssVarsParser(scheme, parserConfig);\n    themeVars = deepmerge(themeVars, varsWithDefaults);\n    colorSchemesMap[key] = {\n      css,\n      vars\n    };\n  });\n  if (defaultScheme) {\n    // default color scheme vars should be merged last to set as default\n    const {\n      css,\n      vars,\n      varsWithDefaults\n    } = cssVarsParser(defaultScheme, parserConfig);\n    themeVars = deepmerge(themeVars, varsWithDefaults);\n    colorSchemesMap[defaultColorScheme] = {\n      css,\n      vars\n    };\n  }\n  const generateThemeVars = () => {\n    let vars = _extends({}, rootVars);\n    Object.entries(colorSchemesMap).forEach(([, {\n      vars: schemeVars\n    }]) => {\n      vars = deepmerge(vars, schemeVars);\n    });\n    return vars;\n  };\n  const generateStyleSheets = () => {\n    const stylesheets = [];\n    const colorScheme = theme.defaultColorScheme || 'light';\n    function insertStyleSheet(selector, css) {\n      if (Object.keys(css).length) {\n        stylesheets.push(typeof selector === 'string' ? {\n          [selector]: _extends({}, css)\n        } : selector);\n      }\n    }\n    insertStyleSheet(getSelector?.(undefined, _extends({}, rootCss)) || ':root', rootCss);\n    const {\n        [colorScheme]: defaultSchemeVal\n      } = colorSchemesMap,\n      rest = _objectWithoutPropertiesLoose(colorSchemesMap, [colorScheme].map(_toPropertyKey));\n    if (defaultSchemeVal) {\n      // default color scheme has to come before other color schemes\n      const {\n        css\n      } = defaultSchemeVal;\n      insertStyleSheet(getSelector?.(colorScheme, _extends({}, css)) || `[${theme.attribute || 'data-color-scheme'}=\"${colorScheme}\"]`, css);\n    }\n    Object.entries(rest).forEach(([key, {\n      css\n    }]) => {\n      insertStyleSheet(getSelector?.(key, _extends({}, css)) || `[${theme.attribute || 'data-color-scheme'}=\"${key}\"]`, css);\n    });\n    return stylesheets;\n  };\n  return {\n    vars: themeVars,\n    generateThemeVars,\n    generateStyleSheets\n  };\n}\nexport default prepareCssVars;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}