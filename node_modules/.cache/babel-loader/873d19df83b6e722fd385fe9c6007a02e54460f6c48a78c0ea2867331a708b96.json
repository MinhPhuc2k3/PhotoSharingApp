{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebPhotoApp\\\\sandbox\\\\src\\\\components\\\\UserPhotos\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { Grid, Card, CardMedia, CardContent, Typography } from \"@mui/material\";\nimport \"./styles.css\";\nimport { useParams, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { React, useState, useEffect } from \"react\";\nimport AddCommentBox from \"./addCommentBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserPhotos() {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [userPhotos, setUserPhotos] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [imageList, setImageList] = useState();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const photos = await axios(`http://localhost:8081/api/photo/photosOfUser/${userId}`, {\n          withCredentials: true\n        });\n        setUserPhotos(photos.data);\n        const list = [];\n        const get = async () => {\n          for (const photo of userPhotos) {\n            console.log(photo._id + \"   \" + photo.file_name);\n            await axios.get(`http://localhost:8081/api/photo/${photo._id}`, {\n              file_name: photo.file_name\n            }, {\n              withCredentials: true\n            }).then(res => {\n              const image = res.data;\n              list.push(image);\n            });\n          }\n        };\n        setImageList(list);\n        setIsLoggedIn(true);\n      } catch (er) {\n        setIsLoggedIn(false);\n        console.log(er);\n      }\n    };\n    fetchData();\n  }, [userPhotos]);\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    const options = {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n      hour: \"numeric\",\n      minute: \"2-digit\"\n    };\n    return new Intl.DateTimeFormat(\"en-US\", options).format(date);\n  };\n  if (isLoggedIn) return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: userPhotos.map((photo, index) => {\n      let image = imageList[index];\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            component: \"img\",\n            image: image,\n            alt: photo.file_name,\n            sx: {\n              maxHeight: \"500px\",\n              maxWidth: \"500px\",\n              margin: \"auto\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: [\"Date: \", formatDate(photo.date_time)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: [\"Comments: \", /*#__PURE__*/_jsxDEV(AddCommentBox, {\n                photoId: photo._id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 54\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this), photo.comments && photo.comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: formatDate(comment.date_time)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  to: `/users/${comment.user._id}`,\n                  children: `${comment.user.first_name} ${comment.user.last_name}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 27\n                }, this), \": \", comment.comment]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 25\n              }, this)]\n            }, comment._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 23\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)\n      }, photo._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 7\n  }, this);\n}\n_s(UserPhotos, \"NYsEKMEquLkJaV+hzxjpWfeDPtU=\", false, function () {\n  return [useParams];\n});\n_c = UserPhotos;\nexport default UserPhotos;\nvar _c;\n$RefreshReg$(_c, \"UserPhotos\");","map":{"version":3,"names":["Grid","Card","CardMedia","CardContent","Typography","useParams","Link","axios","React","useState","useEffect","AddCommentBox","jsxDEV","_jsxDEV","UserPhotos","_s","userId","userPhotos","setUserPhotos","isLoggedIn","setIsLoggedIn","imageList","setImageList","fetchData","photos","withCredentials","data","list","get","photo","console","log","_id","file_name","then","res","image","push","er","formatDate","dateString","date","Date","options","year","month","day","hour","minute","Intl","DateTimeFormat","format","container","spacing","children","map","index","item","xs","component","alt","sx","maxHeight","maxWidth","margin","fileName","_jsxFileName","lineNumber","columnNumber","variant","date_time","photoId","comments","comment","to","user","first_name","last_name","_c","$RefreshReg$"],"sources":["D:/WebPhotoApp/sandbox/src/components/UserPhotos/index.jsx"],"sourcesContent":["import { Grid, Card, CardMedia, CardContent, Typography } from \"@mui/material\";\nimport \"./styles.css\";\nimport { useParams, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { React, useState, useEffect } from \"react\";\nimport AddCommentBox from \"./addCommentBox\";\n\n\n\n\n\n\n\nfunction UserPhotos() {\n  const { userId } = useParams();\n  const [userPhotos, setUserPhotos] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [imageList, setImageList] = useState();\n  useEffect(() => {\n\n    const fetchData = async () => {\n      try {\n        const photos = await axios(\n          `http://localhost:8081/api/photo/photosOfUser/${userId}`, { withCredentials: true }\n        );\n        setUserPhotos(photos.data);\n        const list = [];\n        const get =async ()=>{\n          for( const photo of userPhotos){\n              console.log(photo._id+\"   \"+photo.file_name)\n              await axios.get(`http://localhost:8081/api/photo/${photo._id}`,{file_name:photo.file_name},{withCredentials:true})\n              .then((res)=>{\n                const image = res.data;\n                list.push(image); \n              })\n            }\n        }\n        setImageList(list);\n        setIsLoggedIn(true);\n      } catch (er) {\n        setIsLoggedIn(false);\n        console.log(er);\n      }\n    };\n    fetchData();\n  }, [userPhotos]);\n\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    const options = {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n      hour: \"numeric\",\n      minute: \"2-digit\",\n    };\n    return new Intl.DateTimeFormat(\"en-US\", options).format(date);\n  };\n  if (isLoggedIn)\n    return (\n      <Grid container spacing={2}>\n        {userPhotos.map((photo, index) => {\n          let image = imageList[index];\n          return (\n            <Grid item xs={8} key={photo._id}>\n              <Card>\n                <CardMedia\n                  component=\"img\"\n                  image={image}\n                  alt={photo.file_name}\n                  sx={{ maxHeight: \"500px\", maxWidth: \"500px\", margin: \"auto\" }}\n                />\n                <CardContent>\n                  <Typography variant=\"body2\">\n                    Date: {formatDate(photo.date_time)}\n                  </Typography>\n                  <Typography variant=\"h6\">Comments: <AddCommentBox photoId={photo._id} /></Typography>\n                  {photo.comments &&\n                    photo.comments.map((comment) => (\n                      <div key={comment._id}>\n                        <Typography variant=\"body2\">\n                          {formatDate(comment.date_time)}\n                        </Typography>\n                        <Typography variant=\"body1\">\n                          <Link to={`/users/${comment.user._id}`}>\n                            {`${comment.user.first_name} ${comment.user.last_name}`}\n                          </Link>\n                          : {comment.comment}\n                        </Typography>\n\n                      </div>\n                    ))}\n                </CardContent>\n              </Card>\n            </Grid>\n          )\n        })}\n\n      </Grid>\n    );\n}\n\nexport default UserPhotos;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}