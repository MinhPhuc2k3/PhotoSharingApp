{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useIsFocusVisible as useIsFocusVisible } from '@mui/utils';\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\nimport { useRootElementName } from '../utils/useRootElementName';\n/**\n *\n * Demos:\n *\n * - [Button](https://mui.com/base-ui/react-button/#hook)\n *\n * API:\n *\n * - [useButton API](https://mui.com/base-ui/react-button/hooks-api/#use-button)\n */\nexport function useButton(parameters = {}) {\n  const {\n    disabled = false,\n    focusableWhenDisabled,\n    href,\n    rootRef: externalRef,\n    tabIndex,\n    to,\n    type,\n    rootElementName: rootElementNameProp\n  } = parameters;\n  const buttonRef = React.useRef();\n  const [active, setActive] = React.useState(false);\n  const {\n    isFocusVisibleRef,\n    onFocus: handleFocusVisible,\n    onBlur: handleBlurVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  if (disabled && !focusableWhenDisabled && focusVisible) {\n    setFocusVisible(false);\n  }\n  React.useEffect(() => {\n    isFocusVisibleRef.current = focusVisible;\n  }, [focusVisible, isFocusVisibleRef]);\n  const [rootElementName, updateRootElementName] = useRootElementName({\n    rootElementName: rootElementNameProp ?? (href || to ? 'a' : undefined),\n    componentName: 'Button'\n  });\n  const createHandleMouseLeave = otherHandlers => event => {\n    if (focusVisible) {\n      event.preventDefault();\n    }\n    otherHandlers.onMouseLeave?.(event);\n  };\n  const createHandleBlur = otherHandlers => event => {\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n    otherHandlers.onBlur?.(event);\n  };\n  const createHandleFocus = otherHandlers => event => {\n    // Fix for https://github.com/facebook/react/issues/7769\n    if (!buttonRef.current) {\n      buttonRef.current = event.currentTarget;\n    }\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n      otherHandlers.onFocusVisible?.(event);\n    }\n    otherHandlers.onFocus?.(event);\n  };\n  const isNativeButton = () => {\n    const button = buttonRef.current;\n    return rootElementName === 'BUTTON' || rootElementName === 'INPUT' && ['button', 'submit', 'reset'].includes(button?.type) || rootElementName === 'A' && button?.href;\n  };\n  const createHandleClick = otherHandlers => event => {\n    if (!disabled) {\n      otherHandlers.onClick?.(event);\n    }\n  };\n  const createHandleMouseDown = otherHandlers => event => {\n    if (!disabled) {\n      setActive(true);\n      document.addEventListener('mouseup', () => {\n        setActive(false);\n      }, {\n        once: true\n      });\n    }\n    otherHandlers.onMouseDown?.(event);\n  };\n  const createHandleKeyDown = otherHandlers => event => {\n    otherHandlers.onKeyDown?.(event);\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    if (event.target === event.currentTarget && !isNativeButton() && event.key === ' ') {\n      event.preventDefault();\n    }\n    if (event.target === event.currentTarget && event.key === ' ' && !disabled) {\n      setActive(true);\n    }\n\n    // Keyboard accessibility for non interactive elements\n    if (event.target === event.currentTarget && !isNativeButton() && event.key === 'Enter' && !disabled) {\n      otherHandlers.onClick?.(event);\n      event.preventDefault();\n    }\n  };\n  const createHandleKeyUp = otherHandlers => event => {\n    // calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed\n    // https://codesandbox.io/p/sandbox/button-keyup-preventdefault-dn7f0\n\n    if (event.target === event.currentTarget) {\n      setActive(false);\n    }\n    otherHandlers.onKeyUp?.(event);\n\n    // Keyboard accessibility for non interactive elements\n    if (event.target === event.currentTarget && !isNativeButton() && !disabled && event.key === ' ' && !event.defaultMuiPrevented) {\n      otherHandlers.onClick?.(event);\n    }\n  };\n  const handleRef = useForkRef(updateRootElementName, externalRef, focusVisibleRef, buttonRef);\n  const buttonProps = {};\n  if (tabIndex !== undefined) {\n    buttonProps.tabIndex = tabIndex;\n  }\n  if (rootElementName === 'BUTTON') {\n    buttonProps.type = type ?? 'button';\n    if (focusableWhenDisabled) {\n      buttonProps['aria-disabled'] = disabled;\n    } else {\n      buttonProps.disabled = disabled;\n    }\n  } else if (rootElementName === 'INPUT') {\n    if (type && ['button', 'submit', 'reset'].includes(type)) {\n      if (focusableWhenDisabled) {\n        buttonProps['aria-disabled'] = disabled;\n      } else {\n        buttonProps.disabled = disabled;\n      }\n    }\n  } else if (rootElementName !== '') {\n    if (!href && !to) {\n      buttonProps.role = 'button';\n      buttonProps.tabIndex = tabIndex ?? 0;\n    }\n    if (disabled) {\n      buttonProps['aria-disabled'] = disabled;\n      buttonProps.tabIndex = focusableWhenDisabled ? tabIndex ?? 0 : -1;\n    }\n  }\n  const getRootProps = (externalProps = {}) => {\n    const externalEventHandlers = _extends({}, extractEventHandlers(parameters), extractEventHandlers(externalProps));\n    const props = _extends({\n      type\n    }, externalEventHandlers, buttonProps, externalProps, {\n      onBlur: createHandleBlur(externalEventHandlers),\n      onClick: createHandleClick(externalEventHandlers),\n      onFocus: createHandleFocus(externalEventHandlers),\n      onKeyDown: createHandleKeyDown(externalEventHandlers),\n      onKeyUp: createHandleKeyUp(externalEventHandlers),\n      onMouseDown: createHandleMouseDown(externalEventHandlers),\n      onMouseLeave: createHandleMouseLeave(externalEventHandlers),\n      ref: handleRef\n    });\n\n    // onFocusVisible can be present on the props or parameters,\n    // but it's not a valid React event handler so it must not be forwarded to the inner component.\n    // If present, it will be handled by the focus handler.\n    delete props.onFocusVisible;\n    return props;\n  };\n  return {\n    getRootProps,\n    focusVisible,\n    setFocusVisible,\n    active,\n    rootRef: handleRef\n  };\n}","map":{"version":3,"names":["_extends","React","unstable_useForkRef","useForkRef","unstable_useIsFocusVisible","useIsFocusVisible","extractEventHandlers","useRootElementName","useButton","parameters","disabled","focusableWhenDisabled","href","rootRef","externalRef","tabIndex","to","type","rootElementName","rootElementNameProp","buttonRef","useRef","active","setActive","useState","isFocusVisibleRef","onFocus","handleFocusVisible","onBlur","handleBlurVisible","ref","focusVisibleRef","focusVisible","setFocusVisible","useEffect","current","updateRootElementName","undefined","componentName","createHandleMouseLeave","otherHandlers","event","preventDefault","onMouseLeave","createHandleBlur","createHandleFocus","currentTarget","onFocusVisible","isNativeButton","button","includes","createHandleClick","onClick","createHandleMouseDown","document","addEventListener","once","onMouseDown","createHandleKeyDown","onKeyDown","defaultMuiPrevented","target","key","createHandleKeyUp","onKeyUp","handleRef","buttonProps","role","getRootProps","externalProps","externalEventHandlers","props"],"sources":["D:/WebPhotoApp/sandbox/node_modules/@mui/joy/node_modules/@mui/base/useButton/useButton.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useIsFocusVisible as useIsFocusVisible } from '@mui/utils';\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\nimport { useRootElementName } from '../utils/useRootElementName';\n/**\n *\n * Demos:\n *\n * - [Button](https://mui.com/base-ui/react-button/#hook)\n *\n * API:\n *\n * - [useButton API](https://mui.com/base-ui/react-button/hooks-api/#use-button)\n */\nexport function useButton(parameters = {}) {\n  const {\n    disabled = false,\n    focusableWhenDisabled,\n    href,\n    rootRef: externalRef,\n    tabIndex,\n    to,\n    type,\n    rootElementName: rootElementNameProp\n  } = parameters;\n  const buttonRef = React.useRef();\n  const [active, setActive] = React.useState(false);\n  const {\n    isFocusVisibleRef,\n    onFocus: handleFocusVisible,\n    onBlur: handleBlurVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  if (disabled && !focusableWhenDisabled && focusVisible) {\n    setFocusVisible(false);\n  }\n  React.useEffect(() => {\n    isFocusVisibleRef.current = focusVisible;\n  }, [focusVisible, isFocusVisibleRef]);\n  const [rootElementName, updateRootElementName] = useRootElementName({\n    rootElementName: rootElementNameProp ?? (href || to ? 'a' : undefined),\n    componentName: 'Button'\n  });\n  const createHandleMouseLeave = otherHandlers => event => {\n    if (focusVisible) {\n      event.preventDefault();\n    }\n    otherHandlers.onMouseLeave?.(event);\n  };\n  const createHandleBlur = otherHandlers => event => {\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n    otherHandlers.onBlur?.(event);\n  };\n  const createHandleFocus = otherHandlers => event => {\n    // Fix for https://github.com/facebook/react/issues/7769\n    if (!buttonRef.current) {\n      buttonRef.current = event.currentTarget;\n    }\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n      otherHandlers.onFocusVisible?.(event);\n    }\n    otherHandlers.onFocus?.(event);\n  };\n  const isNativeButton = () => {\n    const button = buttonRef.current;\n    return rootElementName === 'BUTTON' || rootElementName === 'INPUT' && ['button', 'submit', 'reset'].includes(button?.type) || rootElementName === 'A' && button?.href;\n  };\n  const createHandleClick = otherHandlers => event => {\n    if (!disabled) {\n      otherHandlers.onClick?.(event);\n    }\n  };\n  const createHandleMouseDown = otherHandlers => event => {\n    if (!disabled) {\n      setActive(true);\n      document.addEventListener('mouseup', () => {\n        setActive(false);\n      }, {\n        once: true\n      });\n    }\n    otherHandlers.onMouseDown?.(event);\n  };\n  const createHandleKeyDown = otherHandlers => event => {\n    otherHandlers.onKeyDown?.(event);\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    if (event.target === event.currentTarget && !isNativeButton() && event.key === ' ') {\n      event.preventDefault();\n    }\n    if (event.target === event.currentTarget && event.key === ' ' && !disabled) {\n      setActive(true);\n    }\n\n    // Keyboard accessibility for non interactive elements\n    if (event.target === event.currentTarget && !isNativeButton() && event.key === 'Enter' && !disabled) {\n      otherHandlers.onClick?.(event);\n      event.preventDefault();\n    }\n  };\n  const createHandleKeyUp = otherHandlers => event => {\n    // calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed\n    // https://codesandbox.io/p/sandbox/button-keyup-preventdefault-dn7f0\n\n    if (event.target === event.currentTarget) {\n      setActive(false);\n    }\n    otherHandlers.onKeyUp?.(event);\n\n    // Keyboard accessibility for non interactive elements\n    if (event.target === event.currentTarget && !isNativeButton() && !disabled && event.key === ' ' && !event.defaultMuiPrevented) {\n      otherHandlers.onClick?.(event);\n    }\n  };\n  const handleRef = useForkRef(updateRootElementName, externalRef, focusVisibleRef, buttonRef);\n  const buttonProps = {};\n  if (tabIndex !== undefined) {\n    buttonProps.tabIndex = tabIndex;\n  }\n  if (rootElementName === 'BUTTON') {\n    buttonProps.type = type ?? 'button';\n    if (focusableWhenDisabled) {\n      buttonProps['aria-disabled'] = disabled;\n    } else {\n      buttonProps.disabled = disabled;\n    }\n  } else if (rootElementName === 'INPUT') {\n    if (type && ['button', 'submit', 'reset'].includes(type)) {\n      if (focusableWhenDisabled) {\n        buttonProps['aria-disabled'] = disabled;\n      } else {\n        buttonProps.disabled = disabled;\n      }\n    }\n  } else if (rootElementName !== '') {\n    if (!href && !to) {\n      buttonProps.role = 'button';\n      buttonProps.tabIndex = tabIndex ?? 0;\n    }\n    if (disabled) {\n      buttonProps['aria-disabled'] = disabled;\n      buttonProps.tabIndex = focusableWhenDisabled ? tabIndex ?? 0 : -1;\n    }\n  }\n  const getRootProps = (externalProps = {}) => {\n    const externalEventHandlers = _extends({}, extractEventHandlers(parameters), extractEventHandlers(externalProps));\n    const props = _extends({\n      type\n    }, externalEventHandlers, buttonProps, externalProps, {\n      onBlur: createHandleBlur(externalEventHandlers),\n      onClick: createHandleClick(externalEventHandlers),\n      onFocus: createHandleFocus(externalEventHandlers),\n      onKeyDown: createHandleKeyDown(externalEventHandlers),\n      onKeyUp: createHandleKeyUp(externalEventHandlers),\n      onMouseDown: createHandleMouseDown(externalEventHandlers),\n      onMouseLeave: createHandleMouseLeave(externalEventHandlers),\n      ref: handleRef\n    });\n\n    // onFocusVisible can be present on the props or parameters,\n    // but it's not a valid React event handler so it must not be forwarded to the inner component.\n    // If present, it will be handled by the focus handler.\n    delete props.onFocusVisible;\n    return props;\n  };\n  return {\n    getRootProps,\n    focusVisible,\n    setFocusVisible,\n    active,\n    rootRef: handleRef\n  };\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}