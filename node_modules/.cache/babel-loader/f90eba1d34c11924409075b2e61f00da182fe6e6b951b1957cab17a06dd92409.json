{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebPhotoApp\\\\sandbox\\\\src\\\\components\\\\UserPhotos\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { Grid, Card, CardMedia, CardContent, Typography, TextField } from \"@mui/material\";\nimport \"./styles.css\";\nimport { useParams, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { React, useState, useEffect } from \"react\";\nimport AddCommentBox from \"./addCommentBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserPhotos() {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [loggedInUser, setLoggedInUser] = useState();\n  const [userPhotos, setUserPhotos] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const userPhotos = await axios(`http://localhost:8081/api/photo/photosOfUser/${userId}`, {\n          withCredentials: true\n        });\n        setUserPhotos(userPhotos.data);\n        setIsLoggedIn(true);\n      } catch (er) {\n        console.log(er);\n      }\n    };\n    try {\n      fetchData();\n    } catch (er) {\n      console.log(er);\n    }\n  }, [userPhotos, userId]);\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    const options = {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n      hour: \"numeric\",\n      minute: \"2-digit\"\n    };\n    return new Intl.DateTimeFormat(\"en-US\", options).format(date);\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: userPhotos.map(photo => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          image: require(`../../images/${photo.file_name}`),\n          alt: photo.file_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [\"Date: \", formatDate(photo.date_time)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: [\"Comments: \", /*#__PURE__*/_jsxDEV(AddCommentBox, {\n              photoId: photo._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 50\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), photo.comments && photo.comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: formatDate(comment.date_time)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: `/users/${comment.user._id}`,\n                children: `${comment.user.first_name} ${comment.user.last_name}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 23\n              }, this), \": \", comment.comment]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 21\n            }, this)]\n          }, comment._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, photo._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(UserPhotos, \"vnWRfA+Wcwh0MOFOnmreiqb4RJQ=\", false, function () {\n  return [useParams];\n});\n_c = UserPhotos;\nexport default UserPhotos;\nvar _c;\n$RefreshReg$(_c, \"UserPhotos\");","map":{"version":3,"names":["Grid","Card","CardMedia","CardContent","Typography","TextField","useParams","Link","axios","React","useState","useEffect","AddCommentBox","jsxDEV","_jsxDEV","UserPhotos","_s","userId","loggedInUser","setLoggedInUser","userPhotos","setUserPhotos","isLoggedIn","setIsLoggedIn","fetchData","withCredentials","data","er","console","log","formatDate","dateString","date","Date","options","year","month","day","hour","minute","Intl","DateTimeFormat","format","container","spacing","children","map","photo","item","xs","md","component","image","require","file_name","alt","fileName","_jsxFileName","lineNumber","columnNumber","variant","date_time","photoId","_id","comments","comment","to","user","first_name","last_name","_c","$RefreshReg$"],"sources":["D:/WebPhotoApp/sandbox/src/components/UserPhotos/index.jsx"],"sourcesContent":["import { Grid, Card, CardMedia, CardContent, Typography, TextField } from \"@mui/material\";\n\nimport \"./styles.css\";\nimport { useParams, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { React, useState, useEffect } from \"react\";\nimport AddCommentBox from \"./addCommentBox\";\nfunction UserPhotos() {\n  const { userId } = useParams();\n  const [loggedInUser, setLoggedInUser] = useState();\n  const [userPhotos, setUserPhotos] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n\n    const fetchData = async () => {\n      try{\n        const userPhotos = await axios(\n          `http://localhost:8081/api/photo/photosOfUser/${userId}`,{withCredentials: true}\n        );\n        setUserPhotos(userPhotos.data);\n        setIsLoggedIn(true);\n    }catch(er){\n      console.log(er);\n    }\n    };\n     try{\n      fetchData();\n    }catch(er){\n      console.log(er);\n    }\n  },[userPhotos, userId]);\n\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    const options = {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n      hour: \"numeric\",\n      minute: \"2-digit\",\n    };\n    return new Intl.DateTimeFormat(\"en-US\", options).format(date);\n  };\n  return (\n    <Grid container spacing={2}>\n      {userPhotos.map((photo) => (\n        <Grid item xs={12} md={6} key={photo._id}>\n          <Card>\n            <CardMedia\n              component=\"img\"\n              image={require(`../../images/${photo.file_name}`)}\n              alt={photo.file_name}\n            />\n            <CardContent>\n              <Typography variant=\"body2\">\n                Date: {formatDate(photo.date_time)}\n              </Typography>\n              <Typography variant=\"h6\">Comments: <AddCommentBox photoId={photo._id}/></Typography> \n              {photo.comments &&\n                photo.comments.map((comment) => (\n                  <div key={comment._id}>\n                    <Typography variant=\"body2\">\n                      {formatDate(comment.date_time)}\n                    </Typography>\n                    <Typography variant=\"body1\">\n                      <Link to={`/users/${comment.user._id}`}>\n                        {`${comment.user.first_name} ${comment.user.last_name}`}\n                      </Link>\n                      : {comment.comment}\n                    </Typography>\n\n                  </div>\n                ))}\n            </CardContent>\n          </Card>\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\n\nexport default UserPhotos;\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,IAAI,EAAEC,SAAS,EAAEC,WAAW,EAAEC,UAAU,EAAEC,SAAS,QAAQ,eAAe;AAEzF,OAAO,cAAc;AACrB,SAASC,SAAS,EAAEC,IAAI,QAAQ,kBAAkB;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC5C,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAO,CAAC,GAAGX,SAAS,CAAC,CAAC;EAC9B,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,CAAC;EAClD,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IAEd,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAG;QACD,MAAMJ,UAAU,GAAG,MAAMZ,KAAK,CAC3B,gDAA+CS,MAAO,EAAC,EAAC;UAACQ,eAAe,EAAE;QAAI,CACjF,CAAC;QACDJ,aAAa,CAACD,UAAU,CAACM,IAAI,CAAC;QAC9BH,aAAa,CAAC,IAAI,CAAC;MACvB,CAAC,QAAMI,EAAE,EAAC;QACRC,OAAO,CAACC,GAAG,CAACF,EAAE,CAAC;MACjB;IACA,CAAC;IACA,IAAG;MACFH,SAAS,CAAC,CAAC;IACb,CAAC,QAAMG,EAAE,EAAC;MACRC,OAAO,CAACC,GAAG,CAACF,EAAE,CAAC;IACjB;EACF,CAAC,EAAC,CAACP,UAAU,EAAEH,MAAM,CAAC,CAAC;EAEvB,MAAMa,UAAU,GAAIC,UAAU,IAAK;IACjC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;IACjC,MAAMG,OAAO,GAAG;MACdC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,MAAM;MACbC,GAAG,EAAE,SAAS;MACdC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE;IACV,CAAC;IACD,OAAO,IAAIC,IAAI,CAACC,cAAc,CAAC,OAAO,EAAEP,OAAO,CAAC,CAACQ,MAAM,CAACV,IAAI,CAAC;EAC/D,CAAC;EACD,oBACElB,OAAA,CAACd,IAAI;IAAC2C,SAAS;IAACC,OAAO,EAAE,CAAE;IAAAC,QAAA,EACxBzB,UAAU,CAAC0B,GAAG,CAAEC,KAAK,iBACpBjC,OAAA,CAACd,IAAI;MAACgD,IAAI;MAACC,EAAE,EAAE,EAAG;MAACC,EAAE,EAAE,CAAE;MAAAL,QAAA,eACvB/B,OAAA,CAACb,IAAI;QAAA4C,QAAA,gBACH/B,OAAA,CAACZ,SAAS;UACRiD,SAAS,EAAC,KAAK;UACfC,KAAK,EAAEC,OAAO,CAAE,gBAAeN,KAAK,CAACO,SAAU,EAAC,CAAE;UAClDC,GAAG,EAAER,KAAK,CAACO;QAAU;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CAAC,eACF7C,OAAA,CAACX,WAAW;UAAA0C,QAAA,gBACV/B,OAAA,CAACV,UAAU;YAACwD,OAAO,EAAC,OAAO;YAAAf,QAAA,GAAC,QACpB,EAACf,UAAU,CAACiB,KAAK,CAACc,SAAS,CAAC;UAAA;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB,CAAC,eACb7C,OAAA,CAACV,UAAU;YAACwD,OAAO,EAAC,IAAI;YAAAf,QAAA,GAAC,YAAU,eAAA/B,OAAA,CAACF,aAAa;cAACkD,OAAO,EAAEf,KAAK,CAACgB;YAAI;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,EACnFZ,KAAK,CAACiB,QAAQ,IACbjB,KAAK,CAACiB,QAAQ,CAAClB,GAAG,CAAEmB,OAAO,iBACzBnD,OAAA;YAAA+B,QAAA,gBACE/B,OAAA,CAACV,UAAU;cAACwD,OAAO,EAAC,OAAO;cAAAf,QAAA,EACxBf,UAAU,CAACmC,OAAO,CAACJ,SAAS;YAAC;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpB,CAAC,eACb7C,OAAA,CAACV,UAAU;cAACwD,OAAO,EAAC,OAAO;cAAAf,QAAA,gBACzB/B,OAAA,CAACP,IAAI;gBAAC2D,EAAE,EAAG,UAASD,OAAO,CAACE,IAAI,CAACJ,GAAI,EAAE;gBAAAlB,QAAA,EACnC,GAAEoB,OAAO,CAACE,IAAI,CAACC,UAAW,IAAGH,OAAO,CAACE,IAAI,CAACE,SAAU;cAAC;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACnD,CAAC,MACL,EAACM,OAAO,CAACA,OAAO;YAAA;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACR,CAAC;UAAA,GATLM,OAAO,CAACF,GAAG;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAWhB,CACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV;IAAC,GA5BsBZ,KAAK,CAACgB,GAAG;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OA6BlC,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX;AAAC3C,EAAA,CAzEQD,UAAU;EAAA,QACET,SAAS;AAAA;AAAAgE,EAAA,GADrBvD,UAAU;AA2EnB,eAAeA,UAAU;AAAC,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}